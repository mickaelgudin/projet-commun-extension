/* AutoGenerated Code, changes may be overwritten
* INPUT GRAMMAR:
* element := element1 | element2 | element3 | element4 | element5 | element6 | element7 | element8 | element9 | element10 | element11 | element12 | element13 | element14 | element15 | element16 | element17 | element18 | element19 | element20 | element21 | element22 | element23 | element24 | element25 | element26 | element27 | element28 | element29 | element30 | element31 | element32 | element33 | element34 | element35 | element36 | element37 | element38 | element39 | element40 | element41 | element42 | element43 | element44 | element45 | element46 | element47 | element48 | element49 | element50 | element51 | element52 | element53 | element54 | element55 | element56 | element57 | element58 | element59 | element60 | element61 | element62 | element63 | element64 | element65 | element66 | element67 | element68 | element69 | element70 | element71 | element72 | element73 | element74 | element75 | element76 | element77 | element78 | element79 | element80 | element81 | element82 | element83 | element84 | element85 | element86 | element87 | element88 | element89 | element90 | element91 | element92 | element93 | element94 | element95 | element96 | element97 | element98 | element99 | element100 | element101 | element102 | element103 | element104 | element105 | element106 | element107 | element108 | element109 | element110 | element111 | element112 | element113 | element114 | element115 | element116 | element117 | element118 | element119 | element120 | element121 | element122 | element123 | element124 | element125 | element126 | element127 | element128 | element129 | element130 | element131 | element132 | element133 | element134 | element135 | element136 | element137 | element138 | element139 | element140 | element141 | element142 | element143 | element144 | element145 | element146 | element147 | element148 | element149 | element150 | element151 | element152 | element153 | element154 | element155 | element156 | element157 | element158 | element159 | element160 | element161 | element162 | element163 | element164 | element165 | element166 | element167 | element168 | element169 | element170 | element171 | element172 | element173 | element174 | element175 | element176 | element177 | element178 | element179 | element180 | element181 | element182 | element183 | element184 | element185 | element186 | element187 | element188 | element189 | element190 | element191 | element192 | element193 | element194 | element195 | element196 | element197 | element198 | element199 | element200 | element201 | element202 | element203 | element204 | element205 | element206 | element207 | element208 | element209 | element210 | element211 | element212 | element213 | element214 | element215 | element216 | element217 | element218 | element219 | element220 | element221 | element222 | element223 | element224 | element225 | element226 | element227 | element228 | element229 | element230 | element231 | element232 | element233 | element234 | element235 | element236 | element237 | element238 | element239 | element240 | element241 | element242 | element243 | element244 | element245 | element246 | element247 | element248 | element249 | element250 | element251 | element252 | element253
* element1 := '\$action-sheet-avatar-padding'$
* element2 := '\$action-sheet-background'$
* element3 := '\$action-sheet-border-radius'$
* element4 := '\$action-sheet-font-size'$
* element5 := '\$action-sheet-hover-background'$
* element6 := '\$action-sheet-margin-bottom'$
* element7 := '\$action-sheet-max-width'$
* element8 := '\$backdrop-background'$
* element9 := '\$backdrop-opacity'$
* element10 := '\$breadcrumb-active'$
* element11 := '\$breadcrumb-height'$
* element12 := '\$breadcrumb-hover'$
* element13 := '\$breadcrumb-primary'$
* element14 := '\$breadcrumb-radius'$
* element15 := '\$breadcrumb-secondary'$
* element16 := '\$breadcrumb-separator'$
* element17 := '\$button-big-circular-size'$
* element18 := '\$button-big-font-size'$
* element19 := '\$button-big-icon-size'$
* element20 := '\$button-big-min-height'$
* element21 := '\$button-big-padding'$
* element22 := '\$button-border-radius'$
* element23 := '\$button-box-shadow'$
* element24 := '\$button-circular-size'$
* element25 := '\$button-font-size'$
* element26 := '\$button-font-weight'$
* element27 := '\$button-icon-size'$
* element28 := '\$button-margin'$
* element29 := '\$button-min-height'$
* element30 := '\$button-padding'$
* element31 := '\$button-small-circular-size'$
* element32 := '\$button-small-font-size'$
* element33 := '\$button-small-icon-size'$
* element34 := '\$button-small-min-height'$
* element35 := '\$button-small-padding'$
* element36 := '\$button-text-transform'$
* element37 := '\$card-border-radius'$
* element38 := '\$card-box-shadow'$
* element39 := '\$card-padding-horizontal'$
* element40 := '\$card-padding-vertical'$
* element41 := '\$chat-box-shadow'$
* element42 := '\$chat-date-color'$
* element43 := '\$chat-date-font-size'$
* element44 := '\$chat-font-weight'$
* element45 := '\$chat-message-font-size'$
* element46 := '\$chat-message-offset'$
* element47 := '\$chat-message-other-background'$
* element48 := '\$chat-message-other-color'$
* element49 := '\$chat-message-other-pointer-transform'$
* element50 := '\$chat-message-pointer-size'$
* element51 := '\$chat-message-pointer-top'$
* element52 := '\$chat-message-you-background'$
* element53 := '\$chat-message-you-color'$
* element54 := '\$chat-message-you-pointer-transform'$
* element55 := '\$chat-other-date-margin'$
* element56 := '\$chat-you-date-margin'$
* element57 := '\$checkbox-border-radius'$
* element58 := '\$checkbox-border-width'$
* element59 := '\$checkbox-size'$
* element60 := '\$checkbox-tick-thickness'$
* element61 := '\$dark'$
* element62 := '\$datatable-border'$
* element63 := '\$datatable-font-size'$
* element64 := '\$datetime-color'$
* element65 := '\$datetime-range-space'$
* element66 := '\$dimmed-background'$
* element67 := '\$drawer-background'$
* element68 := '\$drawer-border'$
* element69 := '\$drawer-box-shadow'$
* element70 := '\$drawer-font-size'$
* element71 := '\$drawer-header-font-size'$
* element72 := '\$drawer-icon-font-size'$
* element73 := '\$drawer-screen-width-threshold'$
* element74 := '\$drawer-width'$
* element75 := '\$fab-margin'$
* element76 := '\$faded'$
* element77 := '\$form-active-color'$
* element78 := '\$form-border'$
* element79 := '\$form-border-radius'$
* element80 := '\$form-darker-color'$
* element81 := '\$form-lighter-color'$
* element82 := '\$form-shadow'$
* element83 := '\$generic-border-radius'$
* element84 := '\$generic-input-border-width'$
* element85 := '\$generic-input-size'$
* element86 := '\$generic-margin'$
* element87 := '\$grid-big-gutter'$
* element88 := '\$grid-cols'$
* element89 := '\$grid-large-gutter'$
* element90 := '\$grid-medium-gutter'$
* element91 := '\$grid-small-gutter'$
* element92 := '\$has-error'$
* element93 := '\$icon-font-family'$
* element94 := '\$icon-font-style'$
* element95 := '\$icon-font-weight'$
* element96 := '\$icon-letter-spacing'$
* element97 := '\$icon-text-transform'$
* element98 := '\$info'$
* element99 := '\$ios-statusbar-height'$
* element100 := '\$item-content-label-color'$
* element101 := '\$item-label-color'$
* element102 := '\$item-primary-secondary-color'$
* element103 := '\$label-before-transform'$
* element104 := '\$label-border-radius'$
* element105 := '\$label-font-size'$
* element106 := '\$label-padding-horizontal'$
* element107 := '\$label-padding-vertical'$
* element108 := '\$layout-big'$
* element109 := '\$layout-border'$
* element110 := '\$layout-footer-shadow'$
* element111 := '\$layout-header-shadow'$
* element112 := '\$layout-medium'$
* element113 := '\$layout-small'$
* element114 := '\$layout-toolbar-min-height'$
* element115 := '\$light'$
* element116 := '\$light-dimmed-background'$
* element117 := '\$link-color'$
* element118 := '\$link-color-active'$
* element119 := '\$loading-background'$
* element120 := '\$media-avatar-box-shadow'$
* element121 := '\$modal-background'$
* element122 := '\$modal-body-color'$
* element123 := '\$modal-body-padding'$
* element124 := '\$modal-body-text-align'$
* element125 := '\$modal-border-radius'$
* element126 := '\$modal-buttons-padding'$
* element127 := '\$modal-header-font-size'$
* element128 := '\$modal-header-padding'$
* element129 := '\$modal-header-text-align'$
* element130 := '\$modal-height'$
* element131 := '\$modal-max-height'$
* element132 := '\$modal-max-width'$
* element133 := '\$modal-scroll-size'$
* element134 := '\$modal-slim-body-padding'$
* element135 := '\$modal-width'$
* element136 := '\$negative'$
* element137 := '\$paralax-text-shadow'$
* element138 := '\$picker-textfield-min-width'$
* element139 := '\$popover-background'$
* element140 := '\$popover-box-shadow'$
* element141 := '\$positive'$
* element142 := '\$primary'$
* element143 := '\$progress-border-radius'$
* element144 := '\$progress-default-track-color'$
* element145 := '\$progress-margin'$
* element146 := '\$progress-track-color'$
* element147 := '\$progress-track-desktop-height'$
* element148 := '\$progress-track-height'$
* element149 := '\$progress-transition'$
* element150 := '\$pull-to-refresh-color'$
* element151 := '\$pull-to-refresh-font-size'$
* element152 := '\$pull-to-refresh-icon-size'$
* element153 := '\$radio-border'$
* element154 := '\$radio-border-width'$
* element155 := '\$radio-picker-size'$
* element156 := '\$radio-size'$
* element157 := '\$radio-tick-thickness'$
* element158 := '\$range-active-color'$
* element159 := '\$range-color'$
* element160 := '\$range-handle-box-shadow'$
* element161 := '\$range-handle-radius'$
* element162 := '\$range-handle-size'$
* element163 := '\$range-height'$
* element164 := '\$range-mark-height'$
* element165 := '\$range-track-height'$
* element166 := '\$rating-active-grade-color'$
* element167 := '\$rating-grade-color'$
* element168 := '\$rating-grade-exselected-color'$
* element169 := '\$rating-shadow'$
* element170 := '\$secondary'$
* element171 := '\$shadow-color'$
* element172 := '\$shadow-transition'$
* element173 := '\$slider-arrow-size'$
* element174 := '\$slider-button-size'$
* element175 := '\$slider-dots-size'$
* element176 := '\$slider-min-height'$
* element177 := '\$slider-opacity'$
* element178 := '\$slider-opacity-active'$
* element179 := '\$slider-ovelay-color'$
* element180 := '\$slider-padding'$
* element181 := '\$table-border'$
* element182 := '\$table-highlight-color'$
* element183 := '\$table-stripe-color'$
* element184 := '\$tabs-active-border-bottom'$
* element185 := '\$tabs-active-color'$
* element186 := '\$tabs-background'$
* element187 := '\$tabs-big-screen-side-padding'$
* element188 := '\$tabs-big-window-font-size'$
* element189 := '\$tabs-big-window-font-weight'$
* element190 := '\$tabs-big-window-icon-font-size'$
* element191 := '\$tabs-big-window-label-margin'$
* element192 := '\$tabs-big-window-min-height'$
* element193 := '\$tabs-border-bottom'$
* element194 := '\$tabs-color'$
* element195 := '\$tabs-font-size'$
* element196 := '\$tabs-font-weight'$
* element197 := '\$tabs-highlight-color'$
* element198 := '\$tabs-icon-font-size'$
* element199 := '\$tabs-label-margin'$
* element200 := '\$tabs-min-height'$
* element201 := '\$tabs-order'$
* element202 := '\$tabs-padding'$
* element203 := '\$tabs-text-transform'$
* element204 := '\$tertiary'$
* element205 := '\$textfield-border-color'$
* element206 := '\$textfield-border-size'$
* element207 := '\$textfield-border-style'$
* element208 := '\$textfield-focus-background'$
* element209 := '\$textfield-focus-border-color'$
* element210 := '\$textfield-font-size'$
* element211 := '\$textfield-padding-horizontal'$
* element212 := '\$textfield-padding-vertical'$
* element213 := '\$timeline-badge-size'$
* element214 := '\$timeline-border-width'$
* element215 := '\$timeline-color'$
* element216 := '\$timeline-item-padding'$
* element217 := '\$timeline-light-color'$
* element218 := '\$toggle-size'$
* element219 := '\$toggle-width-factor'$
* element220 := '\$toolbar-active-color'$
* element221 := '\$toolbar-background'$
* element222 := '\$toolbar-color'$
* element223 := '\$toolbar-faded-color'$
* element224 := '\$toolbar-padding'$
* element225 := '\$toolbar-title-font-size'$
* element226 := '\$tooltip-background'$
* element227 := '\$tooltip-border-radius'$
* element228 := '\$tooltip-box-shadow'$
* element229 := '\$tooltip-color'$
* element230 := '\$tooltip-padding'$
* element231 := '\$tree-connector-color'$
* element232 := '\$tree-highlight-background'$
* element233 := '\$tree-highlight-color'$
* element234 := '\$tree-label-border-radius'$
* element235 := '\$tree-label-padding'$
* element236 := '\$typography-font-family'$
* element237 := '\$uploader-failed-background'$
* element238 := '\$uploader-failed-color'$
* element239 := '\$uploader-file-max-width'$
* element240 := '\$uploader-font-size'$
* element241 := '\$uploader-img-max-height'$
* element242 := '\$uploader-progressbar-height'$
* element243 := '\$warning'$
* element244 := '\$white'$
* element245 := '\$z-absolute'$
* element246 := '\$z-body-dimmed'$
* element247 := '\$z-drawer'$
* element248 := '\$z-fab'$
* element249 := '\$z-marginals'$
* element250 := '\$z-modal'$
* element251 := '\$z-popover'$
* element252 := '\$z-toast'$
* element253 := '\$z-tooltip'$
*/
type Nullable<T> = T | null;
type $$RuleType<T> = () => Nullable<T>;
interface ASTNodeIntf {
    kind: ASTKinds;
}
export enum ASTKinds {
    element_1 = "element_1",
    element_2 = "element_2",
    element_3 = "element_3",
    element_4 = "element_4",
    element_5 = "element_5",
    element_6 = "element_6",
    element_7 = "element_7",
    element_8 = "element_8",
    element_9 = "element_9",
    element_10 = "element_10",
    element_11 = "element_11",
    element_12 = "element_12",
    element_13 = "element_13",
    element_14 = "element_14",
    element_15 = "element_15",
    element_16 = "element_16",
    element_17 = "element_17",
    element_18 = "element_18",
    element_19 = "element_19",
    element_20 = "element_20",
    element_21 = "element_21",
    element_22 = "element_22",
    element_23 = "element_23",
    element_24 = "element_24",
    element_25 = "element_25",
    element_26 = "element_26",
    element_27 = "element_27",
    element_28 = "element_28",
    element_29 = "element_29",
    element_30 = "element_30",
    element_31 = "element_31",
    element_32 = "element_32",
    element_33 = "element_33",
    element_34 = "element_34",
    element_35 = "element_35",
    element_36 = "element_36",
    element_37 = "element_37",
    element_38 = "element_38",
    element_39 = "element_39",
    element_40 = "element_40",
    element_41 = "element_41",
    element_42 = "element_42",
    element_43 = "element_43",
    element_44 = "element_44",
    element_45 = "element_45",
    element_46 = "element_46",
    element_47 = "element_47",
    element_48 = "element_48",
    element_49 = "element_49",
    element_50 = "element_50",
    element_51 = "element_51",
    element_52 = "element_52",
    element_53 = "element_53",
    element_54 = "element_54",
    element_55 = "element_55",
    element_56 = "element_56",
    element_57 = "element_57",
    element_58 = "element_58",
    element_59 = "element_59",
    element_60 = "element_60",
    element_61 = "element_61",
    element_62 = "element_62",
    element_63 = "element_63",
    element_64 = "element_64",
    element_65 = "element_65",
    element_66 = "element_66",
    element_67 = "element_67",
    element_68 = "element_68",
    element_69 = "element_69",
    element_70 = "element_70",
    element_71 = "element_71",
    element_72 = "element_72",
    element_73 = "element_73",
    element_74 = "element_74",
    element_75 = "element_75",
    element_76 = "element_76",
    element_77 = "element_77",
    element_78 = "element_78",
    element_79 = "element_79",
    element_80 = "element_80",
    element_81 = "element_81",
    element_82 = "element_82",
    element_83 = "element_83",
    element_84 = "element_84",
    element_85 = "element_85",
    element_86 = "element_86",
    element_87 = "element_87",
    element_88 = "element_88",
    element_89 = "element_89",
    element_90 = "element_90",
    element_91 = "element_91",
    element_92 = "element_92",
    element_93 = "element_93",
    element_94 = "element_94",
    element_95 = "element_95",
    element_96 = "element_96",
    element_97 = "element_97",
    element_98 = "element_98",
    element_99 = "element_99",
    element_100 = "element_100",
    element_101 = "element_101",
    element_102 = "element_102",
    element_103 = "element_103",
    element_104 = "element_104",
    element_105 = "element_105",
    element_106 = "element_106",
    element_107 = "element_107",
    element_108 = "element_108",
    element_109 = "element_109",
    element_110 = "element_110",
    element_111 = "element_111",
    element_112 = "element_112",
    element_113 = "element_113",
    element_114 = "element_114",
    element_115 = "element_115",
    element_116 = "element_116",
    element_117 = "element_117",
    element_118 = "element_118",
    element_119 = "element_119",
    element_120 = "element_120",
    element_121 = "element_121",
    element_122 = "element_122",
    element_123 = "element_123",
    element_124 = "element_124",
    element_125 = "element_125",
    element_126 = "element_126",
    element_127 = "element_127",
    element_128 = "element_128",
    element_129 = "element_129",
    element_130 = "element_130",
    element_131 = "element_131",
    element_132 = "element_132",
    element_133 = "element_133",
    element_134 = "element_134",
    element_135 = "element_135",
    element_136 = "element_136",
    element_137 = "element_137",
    element_138 = "element_138",
    element_139 = "element_139",
    element_140 = "element_140",
    element_141 = "element_141",
    element_142 = "element_142",
    element_143 = "element_143",
    element_144 = "element_144",
    element_145 = "element_145",
    element_146 = "element_146",
    element_147 = "element_147",
    element_148 = "element_148",
    element_149 = "element_149",
    element_150 = "element_150",
    element_151 = "element_151",
    element_152 = "element_152",
    element_153 = "element_153",
    element_154 = "element_154",
    element_155 = "element_155",
    element_156 = "element_156",
    element_157 = "element_157",
    element_158 = "element_158",
    element_159 = "element_159",
    element_160 = "element_160",
    element_161 = "element_161",
    element_162 = "element_162",
    element_163 = "element_163",
    element_164 = "element_164",
    element_165 = "element_165",
    element_166 = "element_166",
    element_167 = "element_167",
    element_168 = "element_168",
    element_169 = "element_169",
    element_170 = "element_170",
    element_171 = "element_171",
    element_172 = "element_172",
    element_173 = "element_173",
    element_174 = "element_174",
    element_175 = "element_175",
    element_176 = "element_176",
    element_177 = "element_177",
    element_178 = "element_178",
    element_179 = "element_179",
    element_180 = "element_180",
    element_181 = "element_181",
    element_182 = "element_182",
    element_183 = "element_183",
    element_184 = "element_184",
    element_185 = "element_185",
    element_186 = "element_186",
    element_187 = "element_187",
    element_188 = "element_188",
    element_189 = "element_189",
    element_190 = "element_190",
    element_191 = "element_191",
    element_192 = "element_192",
    element_193 = "element_193",
    element_194 = "element_194",
    element_195 = "element_195",
    element_196 = "element_196",
    element_197 = "element_197",
    element_198 = "element_198",
    element_199 = "element_199",
    element_200 = "element_200",
    element_201 = "element_201",
    element_202 = "element_202",
    element_203 = "element_203",
    element_204 = "element_204",
    element_205 = "element_205",
    element_206 = "element_206",
    element_207 = "element_207",
    element_208 = "element_208",
    element_209 = "element_209",
    element_210 = "element_210",
    element_211 = "element_211",
    element_212 = "element_212",
    element_213 = "element_213",
    element_214 = "element_214",
    element_215 = "element_215",
    element_216 = "element_216",
    element_217 = "element_217",
    element_218 = "element_218",
    element_219 = "element_219",
    element_220 = "element_220",
    element_221 = "element_221",
    element_222 = "element_222",
    element_223 = "element_223",
    element_224 = "element_224",
    element_225 = "element_225",
    element_226 = "element_226",
    element_227 = "element_227",
    element_228 = "element_228",
    element_229 = "element_229",
    element_230 = "element_230",
    element_231 = "element_231",
    element_232 = "element_232",
    element_233 = "element_233",
    element_234 = "element_234",
    element_235 = "element_235",
    element_236 = "element_236",
    element_237 = "element_237",
    element_238 = "element_238",
    element_239 = "element_239",
    element_240 = "element_240",
    element_241 = "element_241",
    element_242 = "element_242",
    element_243 = "element_243",
    element_244 = "element_244",
    element_245 = "element_245",
    element_246 = "element_246",
    element_247 = "element_247",
    element_248 = "element_248",
    element_249 = "element_249",
    element_250 = "element_250",
    element_251 = "element_251",
    element_252 = "element_252",
    element_253 = "element_253",
    element1 = "element1",
    element2 = "element2",
    element3 = "element3",
    element4 = "element4",
    element5 = "element5",
    element6 = "element6",
    element7 = "element7",
    element8 = "element8",
    element9 = "element9",
    element10 = "element10",
    element11 = "element11",
    element12 = "element12",
    element13 = "element13",
    element14 = "element14",
    element15 = "element15",
    element16 = "element16",
    element17 = "element17",
    element18 = "element18",
    element19 = "element19",
    element20 = "element20",
    element21 = "element21",
    element22 = "element22",
    element23 = "element23",
    element24 = "element24",
    element25 = "element25",
    element26 = "element26",
    element27 = "element27",
    element28 = "element28",
    element29 = "element29",
    element30 = "element30",
    element31 = "element31",
    element32 = "element32",
    element33 = "element33",
    element34 = "element34",
    element35 = "element35",
    element36 = "element36",
    element37 = "element37",
    element38 = "element38",
    element39 = "element39",
    element40 = "element40",
    element41 = "element41",
    element42 = "element42",
    element43 = "element43",
    element44 = "element44",
    element45 = "element45",
    element46 = "element46",
    element47 = "element47",
    element48 = "element48",
    element49 = "element49",
    element50 = "element50",
    element51 = "element51",
    element52 = "element52",
    element53 = "element53",
    element54 = "element54",
    element55 = "element55",
    element56 = "element56",
    element57 = "element57",
    element58 = "element58",
    element59 = "element59",
    element60 = "element60",
    element61 = "element61",
    element62 = "element62",
    element63 = "element63",
    element64 = "element64",
    element65 = "element65",
    element66 = "element66",
    element67 = "element67",
    element68 = "element68",
    element69 = "element69",
    element70 = "element70",
    element71 = "element71",
    element72 = "element72",
    element73 = "element73",
    element74 = "element74",
    element75 = "element75",
    element76 = "element76",
    element77 = "element77",
    element78 = "element78",
    element79 = "element79",
    element80 = "element80",
    element81 = "element81",
    element82 = "element82",
    element83 = "element83",
    element84 = "element84",
    element85 = "element85",
    element86 = "element86",
    element87 = "element87",
    element88 = "element88",
    element89 = "element89",
    element90 = "element90",
    element91 = "element91",
    element92 = "element92",
    element93 = "element93",
    element94 = "element94",
    element95 = "element95",
    element96 = "element96",
    element97 = "element97",
    element98 = "element98",
    element99 = "element99",
    element100 = "element100",
    element101 = "element101",
    element102 = "element102",
    element103 = "element103",
    element104 = "element104",
    element105 = "element105",
    element106 = "element106",
    element107 = "element107",
    element108 = "element108",
    element109 = "element109",
    element110 = "element110",
    element111 = "element111",
    element112 = "element112",
    element113 = "element113",
    element114 = "element114",
    element115 = "element115",
    element116 = "element116",
    element117 = "element117",
    element118 = "element118",
    element119 = "element119",
    element120 = "element120",
    element121 = "element121",
    element122 = "element122",
    element123 = "element123",
    element124 = "element124",
    element125 = "element125",
    element126 = "element126",
    element127 = "element127",
    element128 = "element128",
    element129 = "element129",
    element130 = "element130",
    element131 = "element131",
    element132 = "element132",
    element133 = "element133",
    element134 = "element134",
    element135 = "element135",
    element136 = "element136",
    element137 = "element137",
    element138 = "element138",
    element139 = "element139",
    element140 = "element140",
    element141 = "element141",
    element142 = "element142",
    element143 = "element143",
    element144 = "element144",
    element145 = "element145",
    element146 = "element146",
    element147 = "element147",
    element148 = "element148",
    element149 = "element149",
    element150 = "element150",
    element151 = "element151",
    element152 = "element152",
    element153 = "element153",
    element154 = "element154",
    element155 = "element155",
    element156 = "element156",
    element157 = "element157",
    element158 = "element158",
    element159 = "element159",
    element160 = "element160",
    element161 = "element161",
    element162 = "element162",
    element163 = "element163",
    element164 = "element164",
    element165 = "element165",
    element166 = "element166",
    element167 = "element167",
    element168 = "element168",
    element169 = "element169",
    element170 = "element170",
    element171 = "element171",
    element172 = "element172",
    element173 = "element173",
    element174 = "element174",
    element175 = "element175",
    element176 = "element176",
    element177 = "element177",
    element178 = "element178",
    element179 = "element179",
    element180 = "element180",
    element181 = "element181",
    element182 = "element182",
    element183 = "element183",
    element184 = "element184",
    element185 = "element185",
    element186 = "element186",
    element187 = "element187",
    element188 = "element188",
    element189 = "element189",
    element190 = "element190",
    element191 = "element191",
    element192 = "element192",
    element193 = "element193",
    element194 = "element194",
    element195 = "element195",
    element196 = "element196",
    element197 = "element197",
    element198 = "element198",
    element199 = "element199",
    element200 = "element200",
    element201 = "element201",
    element202 = "element202",
    element203 = "element203",
    element204 = "element204",
    element205 = "element205",
    element206 = "element206",
    element207 = "element207",
    element208 = "element208",
    element209 = "element209",
    element210 = "element210",
    element211 = "element211",
    element212 = "element212",
    element213 = "element213",
    element214 = "element214",
    element215 = "element215",
    element216 = "element216",
    element217 = "element217",
    element218 = "element218",
    element219 = "element219",
    element220 = "element220",
    element221 = "element221",
    element222 = "element222",
    element223 = "element223",
    element224 = "element224",
    element225 = "element225",
    element226 = "element226",
    element227 = "element227",
    element228 = "element228",
    element229 = "element229",
    element230 = "element230",
    element231 = "element231",
    element232 = "element232",
    element233 = "element233",
    element234 = "element234",
    element235 = "element235",
    element236 = "element236",
    element237 = "element237",
    element238 = "element238",
    element239 = "element239",
    element240 = "element240",
    element241 = "element241",
    element242 = "element242",
    element243 = "element243",
    element244 = "element244",
    element245 = "element245",
    element246 = "element246",
    element247 = "element247",
    element248 = "element248",
    element249 = "element249",
    element250 = "element250",
    element251 = "element251",
    element252 = "element252",
    element253 = "element253",
    $EOF = "$EOF",
}
export type element = element_1 | element_2 | element_3 | element_4 | element_5 | element_6 | element_7 | element_8 | element_9 | element_10 | element_11 | element_12 | element_13 | element_14 | element_15 | element_16 | element_17 | element_18 | element_19 | element_20 | element_21 | element_22 | element_23 | element_24 | element_25 | element_26 | element_27 | element_28 | element_29 | element_30 | element_31 | element_32 | element_33 | element_34 | element_35 | element_36 | element_37 | element_38 | element_39 | element_40 | element_41 | element_42 | element_43 | element_44 | element_45 | element_46 | element_47 | element_48 | element_49 | element_50 | element_51 | element_52 | element_53 | element_54 | element_55 | element_56 | element_57 | element_58 | element_59 | element_60 | element_61 | element_62 | element_63 | element_64 | element_65 | element_66 | element_67 | element_68 | element_69 | element_70 | element_71 | element_72 | element_73 | element_74 | element_75 | element_76 | element_77 | element_78 | element_79 | element_80 | element_81 | element_82 | element_83 | element_84 | element_85 | element_86 | element_87 | element_88 | element_89 | element_90 | element_91 | element_92 | element_93 | element_94 | element_95 | element_96 | element_97 | element_98 | element_99 | element_100 | element_101 | element_102 | element_103 | element_104 | element_105 | element_106 | element_107 | element_108 | element_109 | element_110 | element_111 | element_112 | element_113 | element_114 | element_115 | element_116 | element_117 | element_118 | element_119 | element_120 | element_121 | element_122 | element_123 | element_124 | element_125 | element_126 | element_127 | element_128 | element_129 | element_130 | element_131 | element_132 | element_133 | element_134 | element_135 | element_136 | element_137 | element_138 | element_139 | element_140 | element_141 | element_142 | element_143 | element_144 | element_145 | element_146 | element_147 | element_148 | element_149 | element_150 | element_151 | element_152 | element_153 | element_154 | element_155 | element_156 | element_157 | element_158 | element_159 | element_160 | element_161 | element_162 | element_163 | element_164 | element_165 | element_166 | element_167 | element_168 | element_169 | element_170 | element_171 | element_172 | element_173 | element_174 | element_175 | element_176 | element_177 | element_178 | element_179 | element_180 | element_181 | element_182 | element_183 | element_184 | element_185 | element_186 | element_187 | element_188 | element_189 | element_190 | element_191 | element_192 | element_193 | element_194 | element_195 | element_196 | element_197 | element_198 | element_199 | element_200 | element_201 | element_202 | element_203 | element_204 | element_205 | element_206 | element_207 | element_208 | element_209 | element_210 | element_211 | element_212 | element_213 | element_214 | element_215 | element_216 | element_217 | element_218 | element_219 | element_220 | element_221 | element_222 | element_223 | element_224 | element_225 | element_226 | element_227 | element_228 | element_229 | element_230 | element_231 | element_232 | element_233 | element_234 | element_235 | element_236 | element_237 | element_238 | element_239 | element_240 | element_241 | element_242 | element_243 | element_244 | element_245 | element_246 | element_247 | element_248 | element_249 | element_250 | element_251 | element_252 | element_253;
export type element_1 = element1;
export type element_2 = element2;
export type element_3 = element3;
export type element_4 = element4;
export type element_5 = element5;
export type element_6 = element6;
export type element_7 = element7;
export type element_8 = element8;
export type element_9 = element9;
export type element_10 = element10;
export type element_11 = element11;
export type element_12 = element12;
export type element_13 = element13;
export type element_14 = element14;
export type element_15 = element15;
export type element_16 = element16;
export type element_17 = element17;
export type element_18 = element18;
export type element_19 = element19;
export type element_20 = element20;
export type element_21 = element21;
export type element_22 = element22;
export type element_23 = element23;
export type element_24 = element24;
export type element_25 = element25;
export type element_26 = element26;
export type element_27 = element27;
export type element_28 = element28;
export type element_29 = element29;
export type element_30 = element30;
export type element_31 = element31;
export type element_32 = element32;
export type element_33 = element33;
export type element_34 = element34;
export type element_35 = element35;
export type element_36 = element36;
export type element_37 = element37;
export type element_38 = element38;
export type element_39 = element39;
export type element_40 = element40;
export type element_41 = element41;
export type element_42 = element42;
export type element_43 = element43;
export type element_44 = element44;
export type element_45 = element45;
export type element_46 = element46;
export type element_47 = element47;
export type element_48 = element48;
export type element_49 = element49;
export type element_50 = element50;
export type element_51 = element51;
export type element_52 = element52;
export type element_53 = element53;
export type element_54 = element54;
export type element_55 = element55;
export type element_56 = element56;
export type element_57 = element57;
export type element_58 = element58;
export type element_59 = element59;
export type element_60 = element60;
export type element_61 = element61;
export type element_62 = element62;
export type element_63 = element63;
export type element_64 = element64;
export type element_65 = element65;
export type element_66 = element66;
export type element_67 = element67;
export type element_68 = element68;
export type element_69 = element69;
export type element_70 = element70;
export type element_71 = element71;
export type element_72 = element72;
export type element_73 = element73;
export type element_74 = element74;
export type element_75 = element75;
export type element_76 = element76;
export type element_77 = element77;
export type element_78 = element78;
export type element_79 = element79;
export type element_80 = element80;
export type element_81 = element81;
export type element_82 = element82;
export type element_83 = element83;
export type element_84 = element84;
export type element_85 = element85;
export type element_86 = element86;
export type element_87 = element87;
export type element_88 = element88;
export type element_89 = element89;
export type element_90 = element90;
export type element_91 = element91;
export type element_92 = element92;
export type element_93 = element93;
export type element_94 = element94;
export type element_95 = element95;
export type element_96 = element96;
export type element_97 = element97;
export type element_98 = element98;
export type element_99 = element99;
export type element_100 = element100;
export type element_101 = element101;
export type element_102 = element102;
export type element_103 = element103;
export type element_104 = element104;
export type element_105 = element105;
export type element_106 = element106;
export type element_107 = element107;
export type element_108 = element108;
export type element_109 = element109;
export type element_110 = element110;
export type element_111 = element111;
export type element_112 = element112;
export type element_113 = element113;
export type element_114 = element114;
export type element_115 = element115;
export type element_116 = element116;
export type element_117 = element117;
export type element_118 = element118;
export type element_119 = element119;
export type element_120 = element120;
export type element_121 = element121;
export type element_122 = element122;
export type element_123 = element123;
export type element_124 = element124;
export type element_125 = element125;
export type element_126 = element126;
export type element_127 = element127;
export type element_128 = element128;
export type element_129 = element129;
export type element_130 = element130;
export type element_131 = element131;
export type element_132 = element132;
export type element_133 = element133;
export type element_134 = element134;
export type element_135 = element135;
export type element_136 = element136;
export type element_137 = element137;
export type element_138 = element138;
export type element_139 = element139;
export type element_140 = element140;
export type element_141 = element141;
export type element_142 = element142;
export type element_143 = element143;
export type element_144 = element144;
export type element_145 = element145;
export type element_146 = element146;
export type element_147 = element147;
export type element_148 = element148;
export type element_149 = element149;
export type element_150 = element150;
export type element_151 = element151;
export type element_152 = element152;
export type element_153 = element153;
export type element_154 = element154;
export type element_155 = element155;
export type element_156 = element156;
export type element_157 = element157;
export type element_158 = element158;
export type element_159 = element159;
export type element_160 = element160;
export type element_161 = element161;
export type element_162 = element162;
export type element_163 = element163;
export type element_164 = element164;
export type element_165 = element165;
export type element_166 = element166;
export type element_167 = element167;
export type element_168 = element168;
export type element_169 = element169;
export type element_170 = element170;
export type element_171 = element171;
export type element_172 = element172;
export type element_173 = element173;
export type element_174 = element174;
export type element_175 = element175;
export type element_176 = element176;
export type element_177 = element177;
export type element_178 = element178;
export type element_179 = element179;
export type element_180 = element180;
export type element_181 = element181;
export type element_182 = element182;
export type element_183 = element183;
export type element_184 = element184;
export type element_185 = element185;
export type element_186 = element186;
export type element_187 = element187;
export type element_188 = element188;
export type element_189 = element189;
export type element_190 = element190;
export type element_191 = element191;
export type element_192 = element192;
export type element_193 = element193;
export type element_194 = element194;
export type element_195 = element195;
export type element_196 = element196;
export type element_197 = element197;
export type element_198 = element198;
export type element_199 = element199;
export type element_200 = element200;
export type element_201 = element201;
export type element_202 = element202;
export type element_203 = element203;
export type element_204 = element204;
export type element_205 = element205;
export type element_206 = element206;
export type element_207 = element207;
export type element_208 = element208;
export type element_209 = element209;
export type element_210 = element210;
export type element_211 = element211;
export type element_212 = element212;
export type element_213 = element213;
export type element_214 = element214;
export type element_215 = element215;
export type element_216 = element216;
export type element_217 = element217;
export type element_218 = element218;
export type element_219 = element219;
export type element_220 = element220;
export type element_221 = element221;
export type element_222 = element222;
export type element_223 = element223;
export type element_224 = element224;
export type element_225 = element225;
export type element_226 = element226;
export type element_227 = element227;
export type element_228 = element228;
export type element_229 = element229;
export type element_230 = element230;
export type element_231 = element231;
export type element_232 = element232;
export type element_233 = element233;
export type element_234 = element234;
export type element_235 = element235;
export type element_236 = element236;
export type element_237 = element237;
export type element_238 = element238;
export type element_239 = element239;
export type element_240 = element240;
export type element_241 = element241;
export type element_242 = element242;
export type element_243 = element243;
export type element_244 = element244;
export type element_245 = element245;
export type element_246 = element246;
export type element_247 = element247;
export type element_248 = element248;
export type element_249 = element249;
export type element_250 = element250;
export type element_251 = element251;
export type element_252 = element252;
export type element_253 = element253;
export interface element1 {
    kind: ASTKinds.element1;
}
export interface element2 {
    kind: ASTKinds.element2;
}
export interface element3 {
    kind: ASTKinds.element3;
}
export interface element4 {
    kind: ASTKinds.element4;
}
export interface element5 {
    kind: ASTKinds.element5;
}
export interface element6 {
    kind: ASTKinds.element6;
}
export interface element7 {
    kind: ASTKinds.element7;
}
export interface element8 {
    kind: ASTKinds.element8;
}
export interface element9 {
    kind: ASTKinds.element9;
}
export interface element10 {
    kind: ASTKinds.element10;
}
export interface element11 {
    kind: ASTKinds.element11;
}
export interface element12 {
    kind: ASTKinds.element12;
}
export interface element13 {
    kind: ASTKinds.element13;
}
export interface element14 {
    kind: ASTKinds.element14;
}
export interface element15 {
    kind: ASTKinds.element15;
}
export interface element16 {
    kind: ASTKinds.element16;
}
export interface element17 {
    kind: ASTKinds.element17;
}
export interface element18 {
    kind: ASTKinds.element18;
}
export interface element19 {
    kind: ASTKinds.element19;
}
export interface element20 {
    kind: ASTKinds.element20;
}
export interface element21 {
    kind: ASTKinds.element21;
}
export interface element22 {
    kind: ASTKinds.element22;
}
export interface element23 {
    kind: ASTKinds.element23;
}
export interface element24 {
    kind: ASTKinds.element24;
}
export interface element25 {
    kind: ASTKinds.element25;
}
export interface element26 {
    kind: ASTKinds.element26;
}
export interface element27 {
    kind: ASTKinds.element27;
}
export interface element28 {
    kind: ASTKinds.element28;
}
export interface element29 {
    kind: ASTKinds.element29;
}
export interface element30 {
    kind: ASTKinds.element30;
}
export interface element31 {
    kind: ASTKinds.element31;
}
export interface element32 {
    kind: ASTKinds.element32;
}
export interface element33 {
    kind: ASTKinds.element33;
}
export interface element34 {
    kind: ASTKinds.element34;
}
export interface element35 {
    kind: ASTKinds.element35;
}
export interface element36 {
    kind: ASTKinds.element36;
}
export interface element37 {
    kind: ASTKinds.element37;
}
export interface element38 {
    kind: ASTKinds.element38;
}
export interface element39 {
    kind: ASTKinds.element39;
}
export interface element40 {
    kind: ASTKinds.element40;
}
export interface element41 {
    kind: ASTKinds.element41;
}
export interface element42 {
    kind: ASTKinds.element42;
}
export interface element43 {
    kind: ASTKinds.element43;
}
export interface element44 {
    kind: ASTKinds.element44;
}
export interface element45 {
    kind: ASTKinds.element45;
}
export interface element46 {
    kind: ASTKinds.element46;
}
export interface element47 {
    kind: ASTKinds.element47;
}
export interface element48 {
    kind: ASTKinds.element48;
}
export interface element49 {
    kind: ASTKinds.element49;
}
export interface element50 {
    kind: ASTKinds.element50;
}
export interface element51 {
    kind: ASTKinds.element51;
}
export interface element52 {
    kind: ASTKinds.element52;
}
export interface element53 {
    kind: ASTKinds.element53;
}
export interface element54 {
    kind: ASTKinds.element54;
}
export interface element55 {
    kind: ASTKinds.element55;
}
export interface element56 {
    kind: ASTKinds.element56;
}
export interface element57 {
    kind: ASTKinds.element57;
}
export interface element58 {
    kind: ASTKinds.element58;
}
export interface element59 {
    kind: ASTKinds.element59;
}
export interface element60 {
    kind: ASTKinds.element60;
}
export interface element61 {
    kind: ASTKinds.element61;
}
export interface element62 {
    kind: ASTKinds.element62;
}
export interface element63 {
    kind: ASTKinds.element63;
}
export interface element64 {
    kind: ASTKinds.element64;
}
export interface element65 {
    kind: ASTKinds.element65;
}
export interface element66 {
    kind: ASTKinds.element66;
}
export interface element67 {
    kind: ASTKinds.element67;
}
export interface element68 {
    kind: ASTKinds.element68;
}
export interface element69 {
    kind: ASTKinds.element69;
}
export interface element70 {
    kind: ASTKinds.element70;
}
export interface element71 {
    kind: ASTKinds.element71;
}
export interface element72 {
    kind: ASTKinds.element72;
}
export interface element73 {
    kind: ASTKinds.element73;
}
export interface element74 {
    kind: ASTKinds.element74;
}
export interface element75 {
    kind: ASTKinds.element75;
}
export interface element76 {
    kind: ASTKinds.element76;
}
export interface element77 {
    kind: ASTKinds.element77;
}
export interface element78 {
    kind: ASTKinds.element78;
}
export interface element79 {
    kind: ASTKinds.element79;
}
export interface element80 {
    kind: ASTKinds.element80;
}
export interface element81 {
    kind: ASTKinds.element81;
}
export interface element82 {
    kind: ASTKinds.element82;
}
export interface element83 {
    kind: ASTKinds.element83;
}
export interface element84 {
    kind: ASTKinds.element84;
}
export interface element85 {
    kind: ASTKinds.element85;
}
export interface element86 {
    kind: ASTKinds.element86;
}
export interface element87 {
    kind: ASTKinds.element87;
}
export interface element88 {
    kind: ASTKinds.element88;
}
export interface element89 {
    kind: ASTKinds.element89;
}
export interface element90 {
    kind: ASTKinds.element90;
}
export interface element91 {
    kind: ASTKinds.element91;
}
export interface element92 {
    kind: ASTKinds.element92;
}
export interface element93 {
    kind: ASTKinds.element93;
}
export interface element94 {
    kind: ASTKinds.element94;
}
export interface element95 {
    kind: ASTKinds.element95;
}
export interface element96 {
    kind: ASTKinds.element96;
}
export interface element97 {
    kind: ASTKinds.element97;
}
export interface element98 {
    kind: ASTKinds.element98;
}
export interface element99 {
    kind: ASTKinds.element99;
}
export interface element100 {
    kind: ASTKinds.element100;
}
export interface element101 {
    kind: ASTKinds.element101;
}
export interface element102 {
    kind: ASTKinds.element102;
}
export interface element103 {
    kind: ASTKinds.element103;
}
export interface element104 {
    kind: ASTKinds.element104;
}
export interface element105 {
    kind: ASTKinds.element105;
}
export interface element106 {
    kind: ASTKinds.element106;
}
export interface element107 {
    kind: ASTKinds.element107;
}
export interface element108 {
    kind: ASTKinds.element108;
}
export interface element109 {
    kind: ASTKinds.element109;
}
export interface element110 {
    kind: ASTKinds.element110;
}
export interface element111 {
    kind: ASTKinds.element111;
}
export interface element112 {
    kind: ASTKinds.element112;
}
export interface element113 {
    kind: ASTKinds.element113;
}
export interface element114 {
    kind: ASTKinds.element114;
}
export interface element115 {
    kind: ASTKinds.element115;
}
export interface element116 {
    kind: ASTKinds.element116;
}
export interface element117 {
    kind: ASTKinds.element117;
}
export interface element118 {
    kind: ASTKinds.element118;
}
export interface element119 {
    kind: ASTKinds.element119;
}
export interface element120 {
    kind: ASTKinds.element120;
}
export interface element121 {
    kind: ASTKinds.element121;
}
export interface element122 {
    kind: ASTKinds.element122;
}
export interface element123 {
    kind: ASTKinds.element123;
}
export interface element124 {
    kind: ASTKinds.element124;
}
export interface element125 {
    kind: ASTKinds.element125;
}
export interface element126 {
    kind: ASTKinds.element126;
}
export interface element127 {
    kind: ASTKinds.element127;
}
export interface element128 {
    kind: ASTKinds.element128;
}
export interface element129 {
    kind: ASTKinds.element129;
}
export interface element130 {
    kind: ASTKinds.element130;
}
export interface element131 {
    kind: ASTKinds.element131;
}
export interface element132 {
    kind: ASTKinds.element132;
}
export interface element133 {
    kind: ASTKinds.element133;
}
export interface element134 {
    kind: ASTKinds.element134;
}
export interface element135 {
    kind: ASTKinds.element135;
}
export interface element136 {
    kind: ASTKinds.element136;
}
export interface element137 {
    kind: ASTKinds.element137;
}
export interface element138 {
    kind: ASTKinds.element138;
}
export interface element139 {
    kind: ASTKinds.element139;
}
export interface element140 {
    kind: ASTKinds.element140;
}
export interface element141 {
    kind: ASTKinds.element141;
}
export interface element142 {
    kind: ASTKinds.element142;
}
export interface element143 {
    kind: ASTKinds.element143;
}
export interface element144 {
    kind: ASTKinds.element144;
}
export interface element145 {
    kind: ASTKinds.element145;
}
export interface element146 {
    kind: ASTKinds.element146;
}
export interface element147 {
    kind: ASTKinds.element147;
}
export interface element148 {
    kind: ASTKinds.element148;
}
export interface element149 {
    kind: ASTKinds.element149;
}
export interface element150 {
    kind: ASTKinds.element150;
}
export interface element151 {
    kind: ASTKinds.element151;
}
export interface element152 {
    kind: ASTKinds.element152;
}
export interface element153 {
    kind: ASTKinds.element153;
}
export interface element154 {
    kind: ASTKinds.element154;
}
export interface element155 {
    kind: ASTKinds.element155;
}
export interface element156 {
    kind: ASTKinds.element156;
}
export interface element157 {
    kind: ASTKinds.element157;
}
export interface element158 {
    kind: ASTKinds.element158;
}
export interface element159 {
    kind: ASTKinds.element159;
}
export interface element160 {
    kind: ASTKinds.element160;
}
export interface element161 {
    kind: ASTKinds.element161;
}
export interface element162 {
    kind: ASTKinds.element162;
}
export interface element163 {
    kind: ASTKinds.element163;
}
export interface element164 {
    kind: ASTKinds.element164;
}
export interface element165 {
    kind: ASTKinds.element165;
}
export interface element166 {
    kind: ASTKinds.element166;
}
export interface element167 {
    kind: ASTKinds.element167;
}
export interface element168 {
    kind: ASTKinds.element168;
}
export interface element169 {
    kind: ASTKinds.element169;
}
export interface element170 {
    kind: ASTKinds.element170;
}
export interface element171 {
    kind: ASTKinds.element171;
}
export interface element172 {
    kind: ASTKinds.element172;
}
export interface element173 {
    kind: ASTKinds.element173;
}
export interface element174 {
    kind: ASTKinds.element174;
}
export interface element175 {
    kind: ASTKinds.element175;
}
export interface element176 {
    kind: ASTKinds.element176;
}
export interface element177 {
    kind: ASTKinds.element177;
}
export interface element178 {
    kind: ASTKinds.element178;
}
export interface element179 {
    kind: ASTKinds.element179;
}
export interface element180 {
    kind: ASTKinds.element180;
}
export interface element181 {
    kind: ASTKinds.element181;
}
export interface element182 {
    kind: ASTKinds.element182;
}
export interface element183 {
    kind: ASTKinds.element183;
}
export interface element184 {
    kind: ASTKinds.element184;
}
export interface element185 {
    kind: ASTKinds.element185;
}
export interface element186 {
    kind: ASTKinds.element186;
}
export interface element187 {
    kind: ASTKinds.element187;
}
export interface element188 {
    kind: ASTKinds.element188;
}
export interface element189 {
    kind: ASTKinds.element189;
}
export interface element190 {
    kind: ASTKinds.element190;
}
export interface element191 {
    kind: ASTKinds.element191;
}
export interface element192 {
    kind: ASTKinds.element192;
}
export interface element193 {
    kind: ASTKinds.element193;
}
export interface element194 {
    kind: ASTKinds.element194;
}
export interface element195 {
    kind: ASTKinds.element195;
}
export interface element196 {
    kind: ASTKinds.element196;
}
export interface element197 {
    kind: ASTKinds.element197;
}
export interface element198 {
    kind: ASTKinds.element198;
}
export interface element199 {
    kind: ASTKinds.element199;
}
export interface element200 {
    kind: ASTKinds.element200;
}
export interface element201 {
    kind: ASTKinds.element201;
}
export interface element202 {
    kind: ASTKinds.element202;
}
export interface element203 {
    kind: ASTKinds.element203;
}
export interface element204 {
    kind: ASTKinds.element204;
}
export interface element205 {
    kind: ASTKinds.element205;
}
export interface element206 {
    kind: ASTKinds.element206;
}
export interface element207 {
    kind: ASTKinds.element207;
}
export interface element208 {
    kind: ASTKinds.element208;
}
export interface element209 {
    kind: ASTKinds.element209;
}
export interface element210 {
    kind: ASTKinds.element210;
}
export interface element211 {
    kind: ASTKinds.element211;
}
export interface element212 {
    kind: ASTKinds.element212;
}
export interface element213 {
    kind: ASTKinds.element213;
}
export interface element214 {
    kind: ASTKinds.element214;
}
export interface element215 {
    kind: ASTKinds.element215;
}
export interface element216 {
    kind: ASTKinds.element216;
}
export interface element217 {
    kind: ASTKinds.element217;
}
export interface element218 {
    kind: ASTKinds.element218;
}
export interface element219 {
    kind: ASTKinds.element219;
}
export interface element220 {
    kind: ASTKinds.element220;
}
export interface element221 {
    kind: ASTKinds.element221;
}
export interface element222 {
    kind: ASTKinds.element222;
}
export interface element223 {
    kind: ASTKinds.element223;
}
export interface element224 {
    kind: ASTKinds.element224;
}
export interface element225 {
    kind: ASTKinds.element225;
}
export interface element226 {
    kind: ASTKinds.element226;
}
export interface element227 {
    kind: ASTKinds.element227;
}
export interface element228 {
    kind: ASTKinds.element228;
}
export interface element229 {
    kind: ASTKinds.element229;
}
export interface element230 {
    kind: ASTKinds.element230;
}
export interface element231 {
    kind: ASTKinds.element231;
}
export interface element232 {
    kind: ASTKinds.element232;
}
export interface element233 {
    kind: ASTKinds.element233;
}
export interface element234 {
    kind: ASTKinds.element234;
}
export interface element235 {
    kind: ASTKinds.element235;
}
export interface element236 {
    kind: ASTKinds.element236;
}
export interface element237 {
    kind: ASTKinds.element237;
}
export interface element238 {
    kind: ASTKinds.element238;
}
export interface element239 {
    kind: ASTKinds.element239;
}
export interface element240 {
    kind: ASTKinds.element240;
}
export interface element241 {
    kind: ASTKinds.element241;
}
export interface element242 {
    kind: ASTKinds.element242;
}
export interface element243 {
    kind: ASTKinds.element243;
}
export interface element244 {
    kind: ASTKinds.element244;
}
export interface element245 {
    kind: ASTKinds.element245;
}
export interface element246 {
    kind: ASTKinds.element246;
}
export interface element247 {
    kind: ASTKinds.element247;
}
export interface element248 {
    kind: ASTKinds.element248;
}
export interface element249 {
    kind: ASTKinds.element249;
}
export interface element250 {
    kind: ASTKinds.element250;
}
export interface element251 {
    kind: ASTKinds.element251;
}
export interface element252 {
    kind: ASTKinds.element252;
}
export interface element253 {
    kind: ASTKinds.element253;
}
export class Parser {
    private readonly input: string;
    private pos: PosInfo;
    private negating: boolean = false;
    private memoSafe: boolean = true;
    constructor(input: string) {
        this.pos = {overallPos: 0, line: 1, offset: 0};
        this.input = input;
    }
    public reset(pos: PosInfo) {
        this.pos = pos;
    }
    public finished(): boolean {
        return this.pos.overallPos === this.input.length;
    }
    public clearMemos(): void {
    }
    public matchelement($$dpth: number, $$cr?: ErrorTracker): Nullable<element> {
        return this.choice<element>([
            () => this.matchelement_1($$dpth + 1, $$cr),
            () => this.matchelement_2($$dpth + 1, $$cr),
            () => this.matchelement_3($$dpth + 1, $$cr),
            () => this.matchelement_4($$dpth + 1, $$cr),
            () => this.matchelement_5($$dpth + 1, $$cr),
            () => this.matchelement_6($$dpth + 1, $$cr),
            () => this.matchelement_7($$dpth + 1, $$cr),
            () => this.matchelement_8($$dpth + 1, $$cr),
            () => this.matchelement_9($$dpth + 1, $$cr),
            () => this.matchelement_10($$dpth + 1, $$cr),
            () => this.matchelement_11($$dpth + 1, $$cr),
            () => this.matchelement_12($$dpth + 1, $$cr),
            () => this.matchelement_13($$dpth + 1, $$cr),
            () => this.matchelement_14($$dpth + 1, $$cr),
            () => this.matchelement_15($$dpth + 1, $$cr),
            () => this.matchelement_16($$dpth + 1, $$cr),
            () => this.matchelement_17($$dpth + 1, $$cr),
            () => this.matchelement_18($$dpth + 1, $$cr),
            () => this.matchelement_19($$dpth + 1, $$cr),
            () => this.matchelement_20($$dpth + 1, $$cr),
            () => this.matchelement_21($$dpth + 1, $$cr),
            () => this.matchelement_22($$dpth + 1, $$cr),
            () => this.matchelement_23($$dpth + 1, $$cr),
            () => this.matchelement_24($$dpth + 1, $$cr),
            () => this.matchelement_25($$dpth + 1, $$cr),
            () => this.matchelement_26($$dpth + 1, $$cr),
            () => this.matchelement_27($$dpth + 1, $$cr),
            () => this.matchelement_28($$dpth + 1, $$cr),
            () => this.matchelement_29($$dpth + 1, $$cr),
            () => this.matchelement_30($$dpth + 1, $$cr),
            () => this.matchelement_31($$dpth + 1, $$cr),
            () => this.matchelement_32($$dpth + 1, $$cr),
            () => this.matchelement_33($$dpth + 1, $$cr),
            () => this.matchelement_34($$dpth + 1, $$cr),
            () => this.matchelement_35($$dpth + 1, $$cr),
            () => this.matchelement_36($$dpth + 1, $$cr),
            () => this.matchelement_37($$dpth + 1, $$cr),
            () => this.matchelement_38($$dpth + 1, $$cr),
            () => this.matchelement_39($$dpth + 1, $$cr),
            () => this.matchelement_40($$dpth + 1, $$cr),
            () => this.matchelement_41($$dpth + 1, $$cr),
            () => this.matchelement_42($$dpth + 1, $$cr),
            () => this.matchelement_43($$dpth + 1, $$cr),
            () => this.matchelement_44($$dpth + 1, $$cr),
            () => this.matchelement_45($$dpth + 1, $$cr),
            () => this.matchelement_46($$dpth + 1, $$cr),
            () => this.matchelement_47($$dpth + 1, $$cr),
            () => this.matchelement_48($$dpth + 1, $$cr),
            () => this.matchelement_49($$dpth + 1, $$cr),
            () => this.matchelement_50($$dpth + 1, $$cr),
            () => this.matchelement_51($$dpth + 1, $$cr),
            () => this.matchelement_52($$dpth + 1, $$cr),
            () => this.matchelement_53($$dpth + 1, $$cr),
            () => this.matchelement_54($$dpth + 1, $$cr),
            () => this.matchelement_55($$dpth + 1, $$cr),
            () => this.matchelement_56($$dpth + 1, $$cr),
            () => this.matchelement_57($$dpth + 1, $$cr),
            () => this.matchelement_58($$dpth + 1, $$cr),
            () => this.matchelement_59($$dpth + 1, $$cr),
            () => this.matchelement_60($$dpth + 1, $$cr),
            () => this.matchelement_61($$dpth + 1, $$cr),
            () => this.matchelement_62($$dpth + 1, $$cr),
            () => this.matchelement_63($$dpth + 1, $$cr),
            () => this.matchelement_64($$dpth + 1, $$cr),
            () => this.matchelement_65($$dpth + 1, $$cr),
            () => this.matchelement_66($$dpth + 1, $$cr),
            () => this.matchelement_67($$dpth + 1, $$cr),
            () => this.matchelement_68($$dpth + 1, $$cr),
            () => this.matchelement_69($$dpth + 1, $$cr),
            () => this.matchelement_70($$dpth + 1, $$cr),
            () => this.matchelement_71($$dpth + 1, $$cr),
            () => this.matchelement_72($$dpth + 1, $$cr),
            () => this.matchelement_73($$dpth + 1, $$cr),
            () => this.matchelement_74($$dpth + 1, $$cr),
            () => this.matchelement_75($$dpth + 1, $$cr),
            () => this.matchelement_76($$dpth + 1, $$cr),
            () => this.matchelement_77($$dpth + 1, $$cr),
            () => this.matchelement_78($$dpth + 1, $$cr),
            () => this.matchelement_79($$dpth + 1, $$cr),
            () => this.matchelement_80($$dpth + 1, $$cr),
            () => this.matchelement_81($$dpth + 1, $$cr),
            () => this.matchelement_82($$dpth + 1, $$cr),
            () => this.matchelement_83($$dpth + 1, $$cr),
            () => this.matchelement_84($$dpth + 1, $$cr),
            () => this.matchelement_85($$dpth + 1, $$cr),
            () => this.matchelement_86($$dpth + 1, $$cr),
            () => this.matchelement_87($$dpth + 1, $$cr),
            () => this.matchelement_88($$dpth + 1, $$cr),
            () => this.matchelement_89($$dpth + 1, $$cr),
            () => this.matchelement_90($$dpth + 1, $$cr),
            () => this.matchelement_91($$dpth + 1, $$cr),
            () => this.matchelement_92($$dpth + 1, $$cr),
            () => this.matchelement_93($$dpth + 1, $$cr),
            () => this.matchelement_94($$dpth + 1, $$cr),
            () => this.matchelement_95($$dpth + 1, $$cr),
            () => this.matchelement_96($$dpth + 1, $$cr),
            () => this.matchelement_97($$dpth + 1, $$cr),
            () => this.matchelement_98($$dpth + 1, $$cr),
            () => this.matchelement_99($$dpth + 1, $$cr),
            () => this.matchelement_100($$dpth + 1, $$cr),
            () => this.matchelement_101($$dpth + 1, $$cr),
            () => this.matchelement_102($$dpth + 1, $$cr),
            () => this.matchelement_103($$dpth + 1, $$cr),
            () => this.matchelement_104($$dpth + 1, $$cr),
            () => this.matchelement_105($$dpth + 1, $$cr),
            () => this.matchelement_106($$dpth + 1, $$cr),
            () => this.matchelement_107($$dpth + 1, $$cr),
            () => this.matchelement_108($$dpth + 1, $$cr),
            () => this.matchelement_109($$dpth + 1, $$cr),
            () => this.matchelement_110($$dpth + 1, $$cr),
            () => this.matchelement_111($$dpth + 1, $$cr),
            () => this.matchelement_112($$dpth + 1, $$cr),
            () => this.matchelement_113($$dpth + 1, $$cr),
            () => this.matchelement_114($$dpth + 1, $$cr),
            () => this.matchelement_115($$dpth + 1, $$cr),
            () => this.matchelement_116($$dpth + 1, $$cr),
            () => this.matchelement_117($$dpth + 1, $$cr),
            () => this.matchelement_118($$dpth + 1, $$cr),
            () => this.matchelement_119($$dpth + 1, $$cr),
            () => this.matchelement_120($$dpth + 1, $$cr),
            () => this.matchelement_121($$dpth + 1, $$cr),
            () => this.matchelement_122($$dpth + 1, $$cr),
            () => this.matchelement_123($$dpth + 1, $$cr),
            () => this.matchelement_124($$dpth + 1, $$cr),
            () => this.matchelement_125($$dpth + 1, $$cr),
            () => this.matchelement_126($$dpth + 1, $$cr),
            () => this.matchelement_127($$dpth + 1, $$cr),
            () => this.matchelement_128($$dpth + 1, $$cr),
            () => this.matchelement_129($$dpth + 1, $$cr),
            () => this.matchelement_130($$dpth + 1, $$cr),
            () => this.matchelement_131($$dpth + 1, $$cr),
            () => this.matchelement_132($$dpth + 1, $$cr),
            () => this.matchelement_133($$dpth + 1, $$cr),
            () => this.matchelement_134($$dpth + 1, $$cr),
            () => this.matchelement_135($$dpth + 1, $$cr),
            () => this.matchelement_136($$dpth + 1, $$cr),
            () => this.matchelement_137($$dpth + 1, $$cr),
            () => this.matchelement_138($$dpth + 1, $$cr),
            () => this.matchelement_139($$dpth + 1, $$cr),
            () => this.matchelement_140($$dpth + 1, $$cr),
            () => this.matchelement_141($$dpth + 1, $$cr),
            () => this.matchelement_142($$dpth + 1, $$cr),
            () => this.matchelement_143($$dpth + 1, $$cr),
            () => this.matchelement_144($$dpth + 1, $$cr),
            () => this.matchelement_145($$dpth + 1, $$cr),
            () => this.matchelement_146($$dpth + 1, $$cr),
            () => this.matchelement_147($$dpth + 1, $$cr),
            () => this.matchelement_148($$dpth + 1, $$cr),
            () => this.matchelement_149($$dpth + 1, $$cr),
            () => this.matchelement_150($$dpth + 1, $$cr),
            () => this.matchelement_151($$dpth + 1, $$cr),
            () => this.matchelement_152($$dpth + 1, $$cr),
            () => this.matchelement_153($$dpth + 1, $$cr),
            () => this.matchelement_154($$dpth + 1, $$cr),
            () => this.matchelement_155($$dpth + 1, $$cr),
            () => this.matchelement_156($$dpth + 1, $$cr),
            () => this.matchelement_157($$dpth + 1, $$cr),
            () => this.matchelement_158($$dpth + 1, $$cr),
            () => this.matchelement_159($$dpth + 1, $$cr),
            () => this.matchelement_160($$dpth + 1, $$cr),
            () => this.matchelement_161($$dpth + 1, $$cr),
            () => this.matchelement_162($$dpth + 1, $$cr),
            () => this.matchelement_163($$dpth + 1, $$cr),
            () => this.matchelement_164($$dpth + 1, $$cr),
            () => this.matchelement_165($$dpth + 1, $$cr),
            () => this.matchelement_166($$dpth + 1, $$cr),
            () => this.matchelement_167($$dpth + 1, $$cr),
            () => this.matchelement_168($$dpth + 1, $$cr),
            () => this.matchelement_169($$dpth + 1, $$cr),
            () => this.matchelement_170($$dpth + 1, $$cr),
            () => this.matchelement_171($$dpth + 1, $$cr),
            () => this.matchelement_172($$dpth + 1, $$cr),
            () => this.matchelement_173($$dpth + 1, $$cr),
            () => this.matchelement_174($$dpth + 1, $$cr),
            () => this.matchelement_175($$dpth + 1, $$cr),
            () => this.matchelement_176($$dpth + 1, $$cr),
            () => this.matchelement_177($$dpth + 1, $$cr),
            () => this.matchelement_178($$dpth + 1, $$cr),
            () => this.matchelement_179($$dpth + 1, $$cr),
            () => this.matchelement_180($$dpth + 1, $$cr),
            () => this.matchelement_181($$dpth + 1, $$cr),
            () => this.matchelement_182($$dpth + 1, $$cr),
            () => this.matchelement_183($$dpth + 1, $$cr),
            () => this.matchelement_184($$dpth + 1, $$cr),
            () => this.matchelement_185($$dpth + 1, $$cr),
            () => this.matchelement_186($$dpth + 1, $$cr),
            () => this.matchelement_187($$dpth + 1, $$cr),
            () => this.matchelement_188($$dpth + 1, $$cr),
            () => this.matchelement_189($$dpth + 1, $$cr),
            () => this.matchelement_190($$dpth + 1, $$cr),
            () => this.matchelement_191($$dpth + 1, $$cr),
            () => this.matchelement_192($$dpth + 1, $$cr),
            () => this.matchelement_193($$dpth + 1, $$cr),
            () => this.matchelement_194($$dpth + 1, $$cr),
            () => this.matchelement_195($$dpth + 1, $$cr),
            () => this.matchelement_196($$dpth + 1, $$cr),
            () => this.matchelement_197($$dpth + 1, $$cr),
            () => this.matchelement_198($$dpth + 1, $$cr),
            () => this.matchelement_199($$dpth + 1, $$cr),
            () => this.matchelement_200($$dpth + 1, $$cr),
            () => this.matchelement_201($$dpth + 1, $$cr),
            () => this.matchelement_202($$dpth + 1, $$cr),
            () => this.matchelement_203($$dpth + 1, $$cr),
            () => this.matchelement_204($$dpth + 1, $$cr),
            () => this.matchelement_205($$dpth + 1, $$cr),
            () => this.matchelement_206($$dpth + 1, $$cr),
            () => this.matchelement_207($$dpth + 1, $$cr),
            () => this.matchelement_208($$dpth + 1, $$cr),
            () => this.matchelement_209($$dpth + 1, $$cr),
            () => this.matchelement_210($$dpth + 1, $$cr),
            () => this.matchelement_211($$dpth + 1, $$cr),
            () => this.matchelement_212($$dpth + 1, $$cr),
            () => this.matchelement_213($$dpth + 1, $$cr),
            () => this.matchelement_214($$dpth + 1, $$cr),
            () => this.matchelement_215($$dpth + 1, $$cr),
            () => this.matchelement_216($$dpth + 1, $$cr),
            () => this.matchelement_217($$dpth + 1, $$cr),
            () => this.matchelement_218($$dpth + 1, $$cr),
            () => this.matchelement_219($$dpth + 1, $$cr),
            () => this.matchelement_220($$dpth + 1, $$cr),
            () => this.matchelement_221($$dpth + 1, $$cr),
            () => this.matchelement_222($$dpth + 1, $$cr),
            () => this.matchelement_223($$dpth + 1, $$cr),
            () => this.matchelement_224($$dpth + 1, $$cr),
            () => this.matchelement_225($$dpth + 1, $$cr),
            () => this.matchelement_226($$dpth + 1, $$cr),
            () => this.matchelement_227($$dpth + 1, $$cr),
            () => this.matchelement_228($$dpth + 1, $$cr),
            () => this.matchelement_229($$dpth + 1, $$cr),
            () => this.matchelement_230($$dpth + 1, $$cr),
            () => this.matchelement_231($$dpth + 1, $$cr),
            () => this.matchelement_232($$dpth + 1, $$cr),
            () => this.matchelement_233($$dpth + 1, $$cr),
            () => this.matchelement_234($$dpth + 1, $$cr),
            () => this.matchelement_235($$dpth + 1, $$cr),
            () => this.matchelement_236($$dpth + 1, $$cr),
            () => this.matchelement_237($$dpth + 1, $$cr),
            () => this.matchelement_238($$dpth + 1, $$cr),
            () => this.matchelement_239($$dpth + 1, $$cr),
            () => this.matchelement_240($$dpth + 1, $$cr),
            () => this.matchelement_241($$dpth + 1, $$cr),
            () => this.matchelement_242($$dpth + 1, $$cr),
            () => this.matchelement_243($$dpth + 1, $$cr),
            () => this.matchelement_244($$dpth + 1, $$cr),
            () => this.matchelement_245($$dpth + 1, $$cr),
            () => this.matchelement_246($$dpth + 1, $$cr),
            () => this.matchelement_247($$dpth + 1, $$cr),
            () => this.matchelement_248($$dpth + 1, $$cr),
            () => this.matchelement_249($$dpth + 1, $$cr),
            () => this.matchelement_250($$dpth + 1, $$cr),
            () => this.matchelement_251($$dpth + 1, $$cr),
            () => this.matchelement_252($$dpth + 1, $$cr),
            () => this.matchelement_253($$dpth + 1, $$cr),
        ]);
    }
    public matchelement_1($$dpth: number, $$cr?: ErrorTracker): Nullable<element_1> {
        return this.matchelement1($$dpth + 1, $$cr);
    }
    public matchelement_2($$dpth: number, $$cr?: ErrorTracker): Nullable<element_2> {
        return this.matchelement2($$dpth + 1, $$cr);
    }
    public matchelement_3($$dpth: number, $$cr?: ErrorTracker): Nullable<element_3> {
        return this.matchelement3($$dpth + 1, $$cr);
    }
    public matchelement_4($$dpth: number, $$cr?: ErrorTracker): Nullable<element_4> {
        return this.matchelement4($$dpth + 1, $$cr);
    }
    public matchelement_5($$dpth: number, $$cr?: ErrorTracker): Nullable<element_5> {
        return this.matchelement5($$dpth + 1, $$cr);
    }
    public matchelement_6($$dpth: number, $$cr?: ErrorTracker): Nullable<element_6> {
        return this.matchelement6($$dpth + 1, $$cr);
    }
    public matchelement_7($$dpth: number, $$cr?: ErrorTracker): Nullable<element_7> {
        return this.matchelement7($$dpth + 1, $$cr);
    }
    public matchelement_8($$dpth: number, $$cr?: ErrorTracker): Nullable<element_8> {
        return this.matchelement8($$dpth + 1, $$cr);
    }
    public matchelement_9($$dpth: number, $$cr?: ErrorTracker): Nullable<element_9> {
        return this.matchelement9($$dpth + 1, $$cr);
    }
    public matchelement_10($$dpth: number, $$cr?: ErrorTracker): Nullable<element_10> {
        return this.matchelement10($$dpth + 1, $$cr);
    }
    public matchelement_11($$dpth: number, $$cr?: ErrorTracker): Nullable<element_11> {
        return this.matchelement11($$dpth + 1, $$cr);
    }
    public matchelement_12($$dpth: number, $$cr?: ErrorTracker): Nullable<element_12> {
        return this.matchelement12($$dpth + 1, $$cr);
    }
    public matchelement_13($$dpth: number, $$cr?: ErrorTracker): Nullable<element_13> {
        return this.matchelement13($$dpth + 1, $$cr);
    }
    public matchelement_14($$dpth: number, $$cr?: ErrorTracker): Nullable<element_14> {
        return this.matchelement14($$dpth + 1, $$cr);
    }
    public matchelement_15($$dpth: number, $$cr?: ErrorTracker): Nullable<element_15> {
        return this.matchelement15($$dpth + 1, $$cr);
    }
    public matchelement_16($$dpth: number, $$cr?: ErrorTracker): Nullable<element_16> {
        return this.matchelement16($$dpth + 1, $$cr);
    }
    public matchelement_17($$dpth: number, $$cr?: ErrorTracker): Nullable<element_17> {
        return this.matchelement17($$dpth + 1, $$cr);
    }
    public matchelement_18($$dpth: number, $$cr?: ErrorTracker): Nullable<element_18> {
        return this.matchelement18($$dpth + 1, $$cr);
    }
    public matchelement_19($$dpth: number, $$cr?: ErrorTracker): Nullable<element_19> {
        return this.matchelement19($$dpth + 1, $$cr);
    }
    public matchelement_20($$dpth: number, $$cr?: ErrorTracker): Nullable<element_20> {
        return this.matchelement20($$dpth + 1, $$cr);
    }
    public matchelement_21($$dpth: number, $$cr?: ErrorTracker): Nullable<element_21> {
        return this.matchelement21($$dpth + 1, $$cr);
    }
    public matchelement_22($$dpth: number, $$cr?: ErrorTracker): Nullable<element_22> {
        return this.matchelement22($$dpth + 1, $$cr);
    }
    public matchelement_23($$dpth: number, $$cr?: ErrorTracker): Nullable<element_23> {
        return this.matchelement23($$dpth + 1, $$cr);
    }
    public matchelement_24($$dpth: number, $$cr?: ErrorTracker): Nullable<element_24> {
        return this.matchelement24($$dpth + 1, $$cr);
    }
    public matchelement_25($$dpth: number, $$cr?: ErrorTracker): Nullable<element_25> {
        return this.matchelement25($$dpth + 1, $$cr);
    }
    public matchelement_26($$dpth: number, $$cr?: ErrorTracker): Nullable<element_26> {
        return this.matchelement26($$dpth + 1, $$cr);
    }
    public matchelement_27($$dpth: number, $$cr?: ErrorTracker): Nullable<element_27> {
        return this.matchelement27($$dpth + 1, $$cr);
    }
    public matchelement_28($$dpth: number, $$cr?: ErrorTracker): Nullable<element_28> {
        return this.matchelement28($$dpth + 1, $$cr);
    }
    public matchelement_29($$dpth: number, $$cr?: ErrorTracker): Nullable<element_29> {
        return this.matchelement29($$dpth + 1, $$cr);
    }
    public matchelement_30($$dpth: number, $$cr?: ErrorTracker): Nullable<element_30> {
        return this.matchelement30($$dpth + 1, $$cr);
    }
    public matchelement_31($$dpth: number, $$cr?: ErrorTracker): Nullable<element_31> {
        return this.matchelement31($$dpth + 1, $$cr);
    }
    public matchelement_32($$dpth: number, $$cr?: ErrorTracker): Nullable<element_32> {
        return this.matchelement32($$dpth + 1, $$cr);
    }
    public matchelement_33($$dpth: number, $$cr?: ErrorTracker): Nullable<element_33> {
        return this.matchelement33($$dpth + 1, $$cr);
    }
    public matchelement_34($$dpth: number, $$cr?: ErrorTracker): Nullable<element_34> {
        return this.matchelement34($$dpth + 1, $$cr);
    }
    public matchelement_35($$dpth: number, $$cr?: ErrorTracker): Nullable<element_35> {
        return this.matchelement35($$dpth + 1, $$cr);
    }
    public matchelement_36($$dpth: number, $$cr?: ErrorTracker): Nullable<element_36> {
        return this.matchelement36($$dpth + 1, $$cr);
    }
    public matchelement_37($$dpth: number, $$cr?: ErrorTracker): Nullable<element_37> {
        return this.matchelement37($$dpth + 1, $$cr);
    }
    public matchelement_38($$dpth: number, $$cr?: ErrorTracker): Nullable<element_38> {
        return this.matchelement38($$dpth + 1, $$cr);
    }
    public matchelement_39($$dpth: number, $$cr?: ErrorTracker): Nullable<element_39> {
        return this.matchelement39($$dpth + 1, $$cr);
    }
    public matchelement_40($$dpth: number, $$cr?: ErrorTracker): Nullable<element_40> {
        return this.matchelement40($$dpth + 1, $$cr);
    }
    public matchelement_41($$dpth: number, $$cr?: ErrorTracker): Nullable<element_41> {
        return this.matchelement41($$dpth + 1, $$cr);
    }
    public matchelement_42($$dpth: number, $$cr?: ErrorTracker): Nullable<element_42> {
        return this.matchelement42($$dpth + 1, $$cr);
    }
    public matchelement_43($$dpth: number, $$cr?: ErrorTracker): Nullable<element_43> {
        return this.matchelement43($$dpth + 1, $$cr);
    }
    public matchelement_44($$dpth: number, $$cr?: ErrorTracker): Nullable<element_44> {
        return this.matchelement44($$dpth + 1, $$cr);
    }
    public matchelement_45($$dpth: number, $$cr?: ErrorTracker): Nullable<element_45> {
        return this.matchelement45($$dpth + 1, $$cr);
    }
    public matchelement_46($$dpth: number, $$cr?: ErrorTracker): Nullable<element_46> {
        return this.matchelement46($$dpth + 1, $$cr);
    }
    public matchelement_47($$dpth: number, $$cr?: ErrorTracker): Nullable<element_47> {
        return this.matchelement47($$dpth + 1, $$cr);
    }
    public matchelement_48($$dpth: number, $$cr?: ErrorTracker): Nullable<element_48> {
        return this.matchelement48($$dpth + 1, $$cr);
    }
    public matchelement_49($$dpth: number, $$cr?: ErrorTracker): Nullable<element_49> {
        return this.matchelement49($$dpth + 1, $$cr);
    }
    public matchelement_50($$dpth: number, $$cr?: ErrorTracker): Nullable<element_50> {
        return this.matchelement50($$dpth + 1, $$cr);
    }
    public matchelement_51($$dpth: number, $$cr?: ErrorTracker): Nullable<element_51> {
        return this.matchelement51($$dpth + 1, $$cr);
    }
    public matchelement_52($$dpth: number, $$cr?: ErrorTracker): Nullable<element_52> {
        return this.matchelement52($$dpth + 1, $$cr);
    }
    public matchelement_53($$dpth: number, $$cr?: ErrorTracker): Nullable<element_53> {
        return this.matchelement53($$dpth + 1, $$cr);
    }
    public matchelement_54($$dpth: number, $$cr?: ErrorTracker): Nullable<element_54> {
        return this.matchelement54($$dpth + 1, $$cr);
    }
    public matchelement_55($$dpth: number, $$cr?: ErrorTracker): Nullable<element_55> {
        return this.matchelement55($$dpth + 1, $$cr);
    }
    public matchelement_56($$dpth: number, $$cr?: ErrorTracker): Nullable<element_56> {
        return this.matchelement56($$dpth + 1, $$cr);
    }
    public matchelement_57($$dpth: number, $$cr?: ErrorTracker): Nullable<element_57> {
        return this.matchelement57($$dpth + 1, $$cr);
    }
    public matchelement_58($$dpth: number, $$cr?: ErrorTracker): Nullable<element_58> {
        return this.matchelement58($$dpth + 1, $$cr);
    }
    public matchelement_59($$dpth: number, $$cr?: ErrorTracker): Nullable<element_59> {
        return this.matchelement59($$dpth + 1, $$cr);
    }
    public matchelement_60($$dpth: number, $$cr?: ErrorTracker): Nullable<element_60> {
        return this.matchelement60($$dpth + 1, $$cr);
    }
    public matchelement_61($$dpth: number, $$cr?: ErrorTracker): Nullable<element_61> {
        return this.matchelement61($$dpth + 1, $$cr);
    }
    public matchelement_62($$dpth: number, $$cr?: ErrorTracker): Nullable<element_62> {
        return this.matchelement62($$dpth + 1, $$cr);
    }
    public matchelement_63($$dpth: number, $$cr?: ErrorTracker): Nullable<element_63> {
        return this.matchelement63($$dpth + 1, $$cr);
    }
    public matchelement_64($$dpth: number, $$cr?: ErrorTracker): Nullable<element_64> {
        return this.matchelement64($$dpth + 1, $$cr);
    }
    public matchelement_65($$dpth: number, $$cr?: ErrorTracker): Nullable<element_65> {
        return this.matchelement65($$dpth + 1, $$cr);
    }
    public matchelement_66($$dpth: number, $$cr?: ErrorTracker): Nullable<element_66> {
        return this.matchelement66($$dpth + 1, $$cr);
    }
    public matchelement_67($$dpth: number, $$cr?: ErrorTracker): Nullable<element_67> {
        return this.matchelement67($$dpth + 1, $$cr);
    }
    public matchelement_68($$dpth: number, $$cr?: ErrorTracker): Nullable<element_68> {
        return this.matchelement68($$dpth + 1, $$cr);
    }
    public matchelement_69($$dpth: number, $$cr?: ErrorTracker): Nullable<element_69> {
        return this.matchelement69($$dpth + 1, $$cr);
    }
    public matchelement_70($$dpth: number, $$cr?: ErrorTracker): Nullable<element_70> {
        return this.matchelement70($$dpth + 1, $$cr);
    }
    public matchelement_71($$dpth: number, $$cr?: ErrorTracker): Nullable<element_71> {
        return this.matchelement71($$dpth + 1, $$cr);
    }
    public matchelement_72($$dpth: number, $$cr?: ErrorTracker): Nullable<element_72> {
        return this.matchelement72($$dpth + 1, $$cr);
    }
    public matchelement_73($$dpth: number, $$cr?: ErrorTracker): Nullable<element_73> {
        return this.matchelement73($$dpth + 1, $$cr);
    }
    public matchelement_74($$dpth: number, $$cr?: ErrorTracker): Nullable<element_74> {
        return this.matchelement74($$dpth + 1, $$cr);
    }
    public matchelement_75($$dpth: number, $$cr?: ErrorTracker): Nullable<element_75> {
        return this.matchelement75($$dpth + 1, $$cr);
    }
    public matchelement_76($$dpth: number, $$cr?: ErrorTracker): Nullable<element_76> {
        return this.matchelement76($$dpth + 1, $$cr);
    }
    public matchelement_77($$dpth: number, $$cr?: ErrorTracker): Nullable<element_77> {
        return this.matchelement77($$dpth + 1, $$cr);
    }
    public matchelement_78($$dpth: number, $$cr?: ErrorTracker): Nullable<element_78> {
        return this.matchelement78($$dpth + 1, $$cr);
    }
    public matchelement_79($$dpth: number, $$cr?: ErrorTracker): Nullable<element_79> {
        return this.matchelement79($$dpth + 1, $$cr);
    }
    public matchelement_80($$dpth: number, $$cr?: ErrorTracker): Nullable<element_80> {
        return this.matchelement80($$dpth + 1, $$cr);
    }
    public matchelement_81($$dpth: number, $$cr?: ErrorTracker): Nullable<element_81> {
        return this.matchelement81($$dpth + 1, $$cr);
    }
    public matchelement_82($$dpth: number, $$cr?: ErrorTracker): Nullable<element_82> {
        return this.matchelement82($$dpth + 1, $$cr);
    }
    public matchelement_83($$dpth: number, $$cr?: ErrorTracker): Nullable<element_83> {
        return this.matchelement83($$dpth + 1, $$cr);
    }
    public matchelement_84($$dpth: number, $$cr?: ErrorTracker): Nullable<element_84> {
        return this.matchelement84($$dpth + 1, $$cr);
    }
    public matchelement_85($$dpth: number, $$cr?: ErrorTracker): Nullable<element_85> {
        return this.matchelement85($$dpth + 1, $$cr);
    }
    public matchelement_86($$dpth: number, $$cr?: ErrorTracker): Nullable<element_86> {
        return this.matchelement86($$dpth + 1, $$cr);
    }
    public matchelement_87($$dpth: number, $$cr?: ErrorTracker): Nullable<element_87> {
        return this.matchelement87($$dpth + 1, $$cr);
    }
    public matchelement_88($$dpth: number, $$cr?: ErrorTracker): Nullable<element_88> {
        return this.matchelement88($$dpth + 1, $$cr);
    }
    public matchelement_89($$dpth: number, $$cr?: ErrorTracker): Nullable<element_89> {
        return this.matchelement89($$dpth + 1, $$cr);
    }
    public matchelement_90($$dpth: number, $$cr?: ErrorTracker): Nullable<element_90> {
        return this.matchelement90($$dpth + 1, $$cr);
    }
    public matchelement_91($$dpth: number, $$cr?: ErrorTracker): Nullable<element_91> {
        return this.matchelement91($$dpth + 1, $$cr);
    }
    public matchelement_92($$dpth: number, $$cr?: ErrorTracker): Nullable<element_92> {
        return this.matchelement92($$dpth + 1, $$cr);
    }
    public matchelement_93($$dpth: number, $$cr?: ErrorTracker): Nullable<element_93> {
        return this.matchelement93($$dpth + 1, $$cr);
    }
    public matchelement_94($$dpth: number, $$cr?: ErrorTracker): Nullable<element_94> {
        return this.matchelement94($$dpth + 1, $$cr);
    }
    public matchelement_95($$dpth: number, $$cr?: ErrorTracker): Nullable<element_95> {
        return this.matchelement95($$dpth + 1, $$cr);
    }
    public matchelement_96($$dpth: number, $$cr?: ErrorTracker): Nullable<element_96> {
        return this.matchelement96($$dpth + 1, $$cr);
    }
    public matchelement_97($$dpth: number, $$cr?: ErrorTracker): Nullable<element_97> {
        return this.matchelement97($$dpth + 1, $$cr);
    }
    public matchelement_98($$dpth: number, $$cr?: ErrorTracker): Nullable<element_98> {
        return this.matchelement98($$dpth + 1, $$cr);
    }
    public matchelement_99($$dpth: number, $$cr?: ErrorTracker): Nullable<element_99> {
        return this.matchelement99($$dpth + 1, $$cr);
    }
    public matchelement_100($$dpth: number, $$cr?: ErrorTracker): Nullable<element_100> {
        return this.matchelement100($$dpth + 1, $$cr);
    }
    public matchelement_101($$dpth: number, $$cr?: ErrorTracker): Nullable<element_101> {
        return this.matchelement101($$dpth + 1, $$cr);
    }
    public matchelement_102($$dpth: number, $$cr?: ErrorTracker): Nullable<element_102> {
        return this.matchelement102($$dpth + 1, $$cr);
    }
    public matchelement_103($$dpth: number, $$cr?: ErrorTracker): Nullable<element_103> {
        return this.matchelement103($$dpth + 1, $$cr);
    }
    public matchelement_104($$dpth: number, $$cr?: ErrorTracker): Nullable<element_104> {
        return this.matchelement104($$dpth + 1, $$cr);
    }
    public matchelement_105($$dpth: number, $$cr?: ErrorTracker): Nullable<element_105> {
        return this.matchelement105($$dpth + 1, $$cr);
    }
    public matchelement_106($$dpth: number, $$cr?: ErrorTracker): Nullable<element_106> {
        return this.matchelement106($$dpth + 1, $$cr);
    }
    public matchelement_107($$dpth: number, $$cr?: ErrorTracker): Nullable<element_107> {
        return this.matchelement107($$dpth + 1, $$cr);
    }
    public matchelement_108($$dpth: number, $$cr?: ErrorTracker): Nullable<element_108> {
        return this.matchelement108($$dpth + 1, $$cr);
    }
    public matchelement_109($$dpth: number, $$cr?: ErrorTracker): Nullable<element_109> {
        return this.matchelement109($$dpth + 1, $$cr);
    }
    public matchelement_110($$dpth: number, $$cr?: ErrorTracker): Nullable<element_110> {
        return this.matchelement110($$dpth + 1, $$cr);
    }
    public matchelement_111($$dpth: number, $$cr?: ErrorTracker): Nullable<element_111> {
        return this.matchelement111($$dpth + 1, $$cr);
    }
    public matchelement_112($$dpth: number, $$cr?: ErrorTracker): Nullable<element_112> {
        return this.matchelement112($$dpth + 1, $$cr);
    }
    public matchelement_113($$dpth: number, $$cr?: ErrorTracker): Nullable<element_113> {
        return this.matchelement113($$dpth + 1, $$cr);
    }
    public matchelement_114($$dpth: number, $$cr?: ErrorTracker): Nullable<element_114> {
        return this.matchelement114($$dpth + 1, $$cr);
    }
    public matchelement_115($$dpth: number, $$cr?: ErrorTracker): Nullable<element_115> {
        return this.matchelement115($$dpth + 1, $$cr);
    }
    public matchelement_116($$dpth: number, $$cr?: ErrorTracker): Nullable<element_116> {
        return this.matchelement116($$dpth + 1, $$cr);
    }
    public matchelement_117($$dpth: number, $$cr?: ErrorTracker): Nullable<element_117> {
        return this.matchelement117($$dpth + 1, $$cr);
    }
    public matchelement_118($$dpth: number, $$cr?: ErrorTracker): Nullable<element_118> {
        return this.matchelement118($$dpth + 1, $$cr);
    }
    public matchelement_119($$dpth: number, $$cr?: ErrorTracker): Nullable<element_119> {
        return this.matchelement119($$dpth + 1, $$cr);
    }
    public matchelement_120($$dpth: number, $$cr?: ErrorTracker): Nullable<element_120> {
        return this.matchelement120($$dpth + 1, $$cr);
    }
    public matchelement_121($$dpth: number, $$cr?: ErrorTracker): Nullable<element_121> {
        return this.matchelement121($$dpth + 1, $$cr);
    }
    public matchelement_122($$dpth: number, $$cr?: ErrorTracker): Nullable<element_122> {
        return this.matchelement122($$dpth + 1, $$cr);
    }
    public matchelement_123($$dpth: number, $$cr?: ErrorTracker): Nullable<element_123> {
        return this.matchelement123($$dpth + 1, $$cr);
    }
    public matchelement_124($$dpth: number, $$cr?: ErrorTracker): Nullable<element_124> {
        return this.matchelement124($$dpth + 1, $$cr);
    }
    public matchelement_125($$dpth: number, $$cr?: ErrorTracker): Nullable<element_125> {
        return this.matchelement125($$dpth + 1, $$cr);
    }
    public matchelement_126($$dpth: number, $$cr?: ErrorTracker): Nullable<element_126> {
        return this.matchelement126($$dpth + 1, $$cr);
    }
    public matchelement_127($$dpth: number, $$cr?: ErrorTracker): Nullable<element_127> {
        return this.matchelement127($$dpth + 1, $$cr);
    }
    public matchelement_128($$dpth: number, $$cr?: ErrorTracker): Nullable<element_128> {
        return this.matchelement128($$dpth + 1, $$cr);
    }
    public matchelement_129($$dpth: number, $$cr?: ErrorTracker): Nullable<element_129> {
        return this.matchelement129($$dpth + 1, $$cr);
    }
    public matchelement_130($$dpth: number, $$cr?: ErrorTracker): Nullable<element_130> {
        return this.matchelement130($$dpth + 1, $$cr);
    }
    public matchelement_131($$dpth: number, $$cr?: ErrorTracker): Nullable<element_131> {
        return this.matchelement131($$dpth + 1, $$cr);
    }
    public matchelement_132($$dpth: number, $$cr?: ErrorTracker): Nullable<element_132> {
        return this.matchelement132($$dpth + 1, $$cr);
    }
    public matchelement_133($$dpth: number, $$cr?: ErrorTracker): Nullable<element_133> {
        return this.matchelement133($$dpth + 1, $$cr);
    }
    public matchelement_134($$dpth: number, $$cr?: ErrorTracker): Nullable<element_134> {
        return this.matchelement134($$dpth + 1, $$cr);
    }
    public matchelement_135($$dpth: number, $$cr?: ErrorTracker): Nullable<element_135> {
        return this.matchelement135($$dpth + 1, $$cr);
    }
    public matchelement_136($$dpth: number, $$cr?: ErrorTracker): Nullable<element_136> {
        return this.matchelement136($$dpth + 1, $$cr);
    }
    public matchelement_137($$dpth: number, $$cr?: ErrorTracker): Nullable<element_137> {
        return this.matchelement137($$dpth + 1, $$cr);
    }
    public matchelement_138($$dpth: number, $$cr?: ErrorTracker): Nullable<element_138> {
        return this.matchelement138($$dpth + 1, $$cr);
    }
    public matchelement_139($$dpth: number, $$cr?: ErrorTracker): Nullable<element_139> {
        return this.matchelement139($$dpth + 1, $$cr);
    }
    public matchelement_140($$dpth: number, $$cr?: ErrorTracker): Nullable<element_140> {
        return this.matchelement140($$dpth + 1, $$cr);
    }
    public matchelement_141($$dpth: number, $$cr?: ErrorTracker): Nullable<element_141> {
        return this.matchelement141($$dpth + 1, $$cr);
    }
    public matchelement_142($$dpth: number, $$cr?: ErrorTracker): Nullable<element_142> {
        return this.matchelement142($$dpth + 1, $$cr);
    }
    public matchelement_143($$dpth: number, $$cr?: ErrorTracker): Nullable<element_143> {
        return this.matchelement143($$dpth + 1, $$cr);
    }
    public matchelement_144($$dpth: number, $$cr?: ErrorTracker): Nullable<element_144> {
        return this.matchelement144($$dpth + 1, $$cr);
    }
    public matchelement_145($$dpth: number, $$cr?: ErrorTracker): Nullable<element_145> {
        return this.matchelement145($$dpth + 1, $$cr);
    }
    public matchelement_146($$dpth: number, $$cr?: ErrorTracker): Nullable<element_146> {
        return this.matchelement146($$dpth + 1, $$cr);
    }
    public matchelement_147($$dpth: number, $$cr?: ErrorTracker): Nullable<element_147> {
        return this.matchelement147($$dpth + 1, $$cr);
    }
    public matchelement_148($$dpth: number, $$cr?: ErrorTracker): Nullable<element_148> {
        return this.matchelement148($$dpth + 1, $$cr);
    }
    public matchelement_149($$dpth: number, $$cr?: ErrorTracker): Nullable<element_149> {
        return this.matchelement149($$dpth + 1, $$cr);
    }
    public matchelement_150($$dpth: number, $$cr?: ErrorTracker): Nullable<element_150> {
        return this.matchelement150($$dpth + 1, $$cr);
    }
    public matchelement_151($$dpth: number, $$cr?: ErrorTracker): Nullable<element_151> {
        return this.matchelement151($$dpth + 1, $$cr);
    }
    public matchelement_152($$dpth: number, $$cr?: ErrorTracker): Nullable<element_152> {
        return this.matchelement152($$dpth + 1, $$cr);
    }
    public matchelement_153($$dpth: number, $$cr?: ErrorTracker): Nullable<element_153> {
        return this.matchelement153($$dpth + 1, $$cr);
    }
    public matchelement_154($$dpth: number, $$cr?: ErrorTracker): Nullable<element_154> {
        return this.matchelement154($$dpth + 1, $$cr);
    }
    public matchelement_155($$dpth: number, $$cr?: ErrorTracker): Nullable<element_155> {
        return this.matchelement155($$dpth + 1, $$cr);
    }
    public matchelement_156($$dpth: number, $$cr?: ErrorTracker): Nullable<element_156> {
        return this.matchelement156($$dpth + 1, $$cr);
    }
    public matchelement_157($$dpth: number, $$cr?: ErrorTracker): Nullable<element_157> {
        return this.matchelement157($$dpth + 1, $$cr);
    }
    public matchelement_158($$dpth: number, $$cr?: ErrorTracker): Nullable<element_158> {
        return this.matchelement158($$dpth + 1, $$cr);
    }
    public matchelement_159($$dpth: number, $$cr?: ErrorTracker): Nullable<element_159> {
        return this.matchelement159($$dpth + 1, $$cr);
    }
    public matchelement_160($$dpth: number, $$cr?: ErrorTracker): Nullable<element_160> {
        return this.matchelement160($$dpth + 1, $$cr);
    }
    public matchelement_161($$dpth: number, $$cr?: ErrorTracker): Nullable<element_161> {
        return this.matchelement161($$dpth + 1, $$cr);
    }
    public matchelement_162($$dpth: number, $$cr?: ErrorTracker): Nullable<element_162> {
        return this.matchelement162($$dpth + 1, $$cr);
    }
    public matchelement_163($$dpth: number, $$cr?: ErrorTracker): Nullable<element_163> {
        return this.matchelement163($$dpth + 1, $$cr);
    }
    public matchelement_164($$dpth: number, $$cr?: ErrorTracker): Nullable<element_164> {
        return this.matchelement164($$dpth + 1, $$cr);
    }
    public matchelement_165($$dpth: number, $$cr?: ErrorTracker): Nullable<element_165> {
        return this.matchelement165($$dpth + 1, $$cr);
    }
    public matchelement_166($$dpth: number, $$cr?: ErrorTracker): Nullable<element_166> {
        return this.matchelement166($$dpth + 1, $$cr);
    }
    public matchelement_167($$dpth: number, $$cr?: ErrorTracker): Nullable<element_167> {
        return this.matchelement167($$dpth + 1, $$cr);
    }
    public matchelement_168($$dpth: number, $$cr?: ErrorTracker): Nullable<element_168> {
        return this.matchelement168($$dpth + 1, $$cr);
    }
    public matchelement_169($$dpth: number, $$cr?: ErrorTracker): Nullable<element_169> {
        return this.matchelement169($$dpth + 1, $$cr);
    }
    public matchelement_170($$dpth: number, $$cr?: ErrorTracker): Nullable<element_170> {
        return this.matchelement170($$dpth + 1, $$cr);
    }
    public matchelement_171($$dpth: number, $$cr?: ErrorTracker): Nullable<element_171> {
        return this.matchelement171($$dpth + 1, $$cr);
    }
    public matchelement_172($$dpth: number, $$cr?: ErrorTracker): Nullable<element_172> {
        return this.matchelement172($$dpth + 1, $$cr);
    }
    public matchelement_173($$dpth: number, $$cr?: ErrorTracker): Nullable<element_173> {
        return this.matchelement173($$dpth + 1, $$cr);
    }
    public matchelement_174($$dpth: number, $$cr?: ErrorTracker): Nullable<element_174> {
        return this.matchelement174($$dpth + 1, $$cr);
    }
    public matchelement_175($$dpth: number, $$cr?: ErrorTracker): Nullable<element_175> {
        return this.matchelement175($$dpth + 1, $$cr);
    }
    public matchelement_176($$dpth: number, $$cr?: ErrorTracker): Nullable<element_176> {
        return this.matchelement176($$dpth + 1, $$cr);
    }
    public matchelement_177($$dpth: number, $$cr?: ErrorTracker): Nullable<element_177> {
        return this.matchelement177($$dpth + 1, $$cr);
    }
    public matchelement_178($$dpth: number, $$cr?: ErrorTracker): Nullable<element_178> {
        return this.matchelement178($$dpth + 1, $$cr);
    }
    public matchelement_179($$dpth: number, $$cr?: ErrorTracker): Nullable<element_179> {
        return this.matchelement179($$dpth + 1, $$cr);
    }
    public matchelement_180($$dpth: number, $$cr?: ErrorTracker): Nullable<element_180> {
        return this.matchelement180($$dpth + 1, $$cr);
    }
    public matchelement_181($$dpth: number, $$cr?: ErrorTracker): Nullable<element_181> {
        return this.matchelement181($$dpth + 1, $$cr);
    }
    public matchelement_182($$dpth: number, $$cr?: ErrorTracker): Nullable<element_182> {
        return this.matchelement182($$dpth + 1, $$cr);
    }
    public matchelement_183($$dpth: number, $$cr?: ErrorTracker): Nullable<element_183> {
        return this.matchelement183($$dpth + 1, $$cr);
    }
    public matchelement_184($$dpth: number, $$cr?: ErrorTracker): Nullable<element_184> {
        return this.matchelement184($$dpth + 1, $$cr);
    }
    public matchelement_185($$dpth: number, $$cr?: ErrorTracker): Nullable<element_185> {
        return this.matchelement185($$dpth + 1, $$cr);
    }
    public matchelement_186($$dpth: number, $$cr?: ErrorTracker): Nullable<element_186> {
        return this.matchelement186($$dpth + 1, $$cr);
    }
    public matchelement_187($$dpth: number, $$cr?: ErrorTracker): Nullable<element_187> {
        return this.matchelement187($$dpth + 1, $$cr);
    }
    public matchelement_188($$dpth: number, $$cr?: ErrorTracker): Nullable<element_188> {
        return this.matchelement188($$dpth + 1, $$cr);
    }
    public matchelement_189($$dpth: number, $$cr?: ErrorTracker): Nullable<element_189> {
        return this.matchelement189($$dpth + 1, $$cr);
    }
    public matchelement_190($$dpth: number, $$cr?: ErrorTracker): Nullable<element_190> {
        return this.matchelement190($$dpth + 1, $$cr);
    }
    public matchelement_191($$dpth: number, $$cr?: ErrorTracker): Nullable<element_191> {
        return this.matchelement191($$dpth + 1, $$cr);
    }
    public matchelement_192($$dpth: number, $$cr?: ErrorTracker): Nullable<element_192> {
        return this.matchelement192($$dpth + 1, $$cr);
    }
    public matchelement_193($$dpth: number, $$cr?: ErrorTracker): Nullable<element_193> {
        return this.matchelement193($$dpth + 1, $$cr);
    }
    public matchelement_194($$dpth: number, $$cr?: ErrorTracker): Nullable<element_194> {
        return this.matchelement194($$dpth + 1, $$cr);
    }
    public matchelement_195($$dpth: number, $$cr?: ErrorTracker): Nullable<element_195> {
        return this.matchelement195($$dpth + 1, $$cr);
    }
    public matchelement_196($$dpth: number, $$cr?: ErrorTracker): Nullable<element_196> {
        return this.matchelement196($$dpth + 1, $$cr);
    }
    public matchelement_197($$dpth: number, $$cr?: ErrorTracker): Nullable<element_197> {
        return this.matchelement197($$dpth + 1, $$cr);
    }
    public matchelement_198($$dpth: number, $$cr?: ErrorTracker): Nullable<element_198> {
        return this.matchelement198($$dpth + 1, $$cr);
    }
    public matchelement_199($$dpth: number, $$cr?: ErrorTracker): Nullable<element_199> {
        return this.matchelement199($$dpth + 1, $$cr);
    }
    public matchelement_200($$dpth: number, $$cr?: ErrorTracker): Nullable<element_200> {
        return this.matchelement200($$dpth + 1, $$cr);
    }
    public matchelement_201($$dpth: number, $$cr?: ErrorTracker): Nullable<element_201> {
        return this.matchelement201($$dpth + 1, $$cr);
    }
    public matchelement_202($$dpth: number, $$cr?: ErrorTracker): Nullable<element_202> {
        return this.matchelement202($$dpth + 1, $$cr);
    }
    public matchelement_203($$dpth: number, $$cr?: ErrorTracker): Nullable<element_203> {
        return this.matchelement203($$dpth + 1, $$cr);
    }
    public matchelement_204($$dpth: number, $$cr?: ErrorTracker): Nullable<element_204> {
        return this.matchelement204($$dpth + 1, $$cr);
    }
    public matchelement_205($$dpth: number, $$cr?: ErrorTracker): Nullable<element_205> {
        return this.matchelement205($$dpth + 1, $$cr);
    }
    public matchelement_206($$dpth: number, $$cr?: ErrorTracker): Nullable<element_206> {
        return this.matchelement206($$dpth + 1, $$cr);
    }
    public matchelement_207($$dpth: number, $$cr?: ErrorTracker): Nullable<element_207> {
        return this.matchelement207($$dpth + 1, $$cr);
    }
    public matchelement_208($$dpth: number, $$cr?: ErrorTracker): Nullable<element_208> {
        return this.matchelement208($$dpth + 1, $$cr);
    }
    public matchelement_209($$dpth: number, $$cr?: ErrorTracker): Nullable<element_209> {
        return this.matchelement209($$dpth + 1, $$cr);
    }
    public matchelement_210($$dpth: number, $$cr?: ErrorTracker): Nullable<element_210> {
        return this.matchelement210($$dpth + 1, $$cr);
    }
    public matchelement_211($$dpth: number, $$cr?: ErrorTracker): Nullable<element_211> {
        return this.matchelement211($$dpth + 1, $$cr);
    }
    public matchelement_212($$dpth: number, $$cr?: ErrorTracker): Nullable<element_212> {
        return this.matchelement212($$dpth + 1, $$cr);
    }
    public matchelement_213($$dpth: number, $$cr?: ErrorTracker): Nullable<element_213> {
        return this.matchelement213($$dpth + 1, $$cr);
    }
    public matchelement_214($$dpth: number, $$cr?: ErrorTracker): Nullable<element_214> {
        return this.matchelement214($$dpth + 1, $$cr);
    }
    public matchelement_215($$dpth: number, $$cr?: ErrorTracker): Nullable<element_215> {
        return this.matchelement215($$dpth + 1, $$cr);
    }
    public matchelement_216($$dpth: number, $$cr?: ErrorTracker): Nullable<element_216> {
        return this.matchelement216($$dpth + 1, $$cr);
    }
    public matchelement_217($$dpth: number, $$cr?: ErrorTracker): Nullable<element_217> {
        return this.matchelement217($$dpth + 1, $$cr);
    }
    public matchelement_218($$dpth: number, $$cr?: ErrorTracker): Nullable<element_218> {
        return this.matchelement218($$dpth + 1, $$cr);
    }
    public matchelement_219($$dpth: number, $$cr?: ErrorTracker): Nullable<element_219> {
        return this.matchelement219($$dpth + 1, $$cr);
    }
    public matchelement_220($$dpth: number, $$cr?: ErrorTracker): Nullable<element_220> {
        return this.matchelement220($$dpth + 1, $$cr);
    }
    public matchelement_221($$dpth: number, $$cr?: ErrorTracker): Nullable<element_221> {
        return this.matchelement221($$dpth + 1, $$cr);
    }
    public matchelement_222($$dpth: number, $$cr?: ErrorTracker): Nullable<element_222> {
        return this.matchelement222($$dpth + 1, $$cr);
    }
    public matchelement_223($$dpth: number, $$cr?: ErrorTracker): Nullable<element_223> {
        return this.matchelement223($$dpth + 1, $$cr);
    }
    public matchelement_224($$dpth: number, $$cr?: ErrorTracker): Nullable<element_224> {
        return this.matchelement224($$dpth + 1, $$cr);
    }
    public matchelement_225($$dpth: number, $$cr?: ErrorTracker): Nullable<element_225> {
        return this.matchelement225($$dpth + 1, $$cr);
    }
    public matchelement_226($$dpth: number, $$cr?: ErrorTracker): Nullable<element_226> {
        return this.matchelement226($$dpth + 1, $$cr);
    }
    public matchelement_227($$dpth: number, $$cr?: ErrorTracker): Nullable<element_227> {
        return this.matchelement227($$dpth + 1, $$cr);
    }
    public matchelement_228($$dpth: number, $$cr?: ErrorTracker): Nullable<element_228> {
        return this.matchelement228($$dpth + 1, $$cr);
    }
    public matchelement_229($$dpth: number, $$cr?: ErrorTracker): Nullable<element_229> {
        return this.matchelement229($$dpth + 1, $$cr);
    }
    public matchelement_230($$dpth: number, $$cr?: ErrorTracker): Nullable<element_230> {
        return this.matchelement230($$dpth + 1, $$cr);
    }
    public matchelement_231($$dpth: number, $$cr?: ErrorTracker): Nullable<element_231> {
        return this.matchelement231($$dpth + 1, $$cr);
    }
    public matchelement_232($$dpth: number, $$cr?: ErrorTracker): Nullable<element_232> {
        return this.matchelement232($$dpth + 1, $$cr);
    }
    public matchelement_233($$dpth: number, $$cr?: ErrorTracker): Nullable<element_233> {
        return this.matchelement233($$dpth + 1, $$cr);
    }
    public matchelement_234($$dpth: number, $$cr?: ErrorTracker): Nullable<element_234> {
        return this.matchelement234($$dpth + 1, $$cr);
    }
    public matchelement_235($$dpth: number, $$cr?: ErrorTracker): Nullable<element_235> {
        return this.matchelement235($$dpth + 1, $$cr);
    }
    public matchelement_236($$dpth: number, $$cr?: ErrorTracker): Nullable<element_236> {
        return this.matchelement236($$dpth + 1, $$cr);
    }
    public matchelement_237($$dpth: number, $$cr?: ErrorTracker): Nullable<element_237> {
        return this.matchelement237($$dpth + 1, $$cr);
    }
    public matchelement_238($$dpth: number, $$cr?: ErrorTracker): Nullable<element_238> {
        return this.matchelement238($$dpth + 1, $$cr);
    }
    public matchelement_239($$dpth: number, $$cr?: ErrorTracker): Nullable<element_239> {
        return this.matchelement239($$dpth + 1, $$cr);
    }
    public matchelement_240($$dpth: number, $$cr?: ErrorTracker): Nullable<element_240> {
        return this.matchelement240($$dpth + 1, $$cr);
    }
    public matchelement_241($$dpth: number, $$cr?: ErrorTracker): Nullable<element_241> {
        return this.matchelement241($$dpth + 1, $$cr);
    }
    public matchelement_242($$dpth: number, $$cr?: ErrorTracker): Nullable<element_242> {
        return this.matchelement242($$dpth + 1, $$cr);
    }
    public matchelement_243($$dpth: number, $$cr?: ErrorTracker): Nullable<element_243> {
        return this.matchelement243($$dpth + 1, $$cr);
    }
    public matchelement_244($$dpth: number, $$cr?: ErrorTracker): Nullable<element_244> {
        return this.matchelement244($$dpth + 1, $$cr);
    }
    public matchelement_245($$dpth: number, $$cr?: ErrorTracker): Nullable<element_245> {
        return this.matchelement245($$dpth + 1, $$cr);
    }
    public matchelement_246($$dpth: number, $$cr?: ErrorTracker): Nullable<element_246> {
        return this.matchelement246($$dpth + 1, $$cr);
    }
    public matchelement_247($$dpth: number, $$cr?: ErrorTracker): Nullable<element_247> {
        return this.matchelement247($$dpth + 1, $$cr);
    }
    public matchelement_248($$dpth: number, $$cr?: ErrorTracker): Nullable<element_248> {
        return this.matchelement248($$dpth + 1, $$cr);
    }
    public matchelement_249($$dpth: number, $$cr?: ErrorTracker): Nullable<element_249> {
        return this.matchelement249($$dpth + 1, $$cr);
    }
    public matchelement_250($$dpth: number, $$cr?: ErrorTracker): Nullable<element_250> {
        return this.matchelement250($$dpth + 1, $$cr);
    }
    public matchelement_251($$dpth: number, $$cr?: ErrorTracker): Nullable<element_251> {
        return this.matchelement251($$dpth + 1, $$cr);
    }
    public matchelement_252($$dpth: number, $$cr?: ErrorTracker): Nullable<element_252> {
        return this.matchelement252($$dpth + 1, $$cr);
    }
    public matchelement_253($$dpth: number, $$cr?: ErrorTracker): Nullable<element_253> {
        return this.matchelement253($$dpth + 1, $$cr);
    }
    public matchelement1($$dpth: number, $$cr?: ErrorTracker): Nullable<element1> {
        return this.run<element1>($$dpth,
            () => {
                let $$res: Nullable<element1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-avatar-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element1, };
                }
                return $$res;
            });
    }
    public matchelement2($$dpth: number, $$cr?: ErrorTracker): Nullable<element2> {
        return this.run<element2>($$dpth,
            () => {
                let $$res: Nullable<element2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element2, };
                }
                return $$res;
            });
    }
    public matchelement3($$dpth: number, $$cr?: ErrorTracker): Nullable<element3> {
        return this.run<element3>($$dpth,
            () => {
                let $$res: Nullable<element3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element3, };
                }
                return $$res;
            });
    }
    public matchelement4($$dpth: number, $$cr?: ErrorTracker): Nullable<element4> {
        return this.run<element4>($$dpth,
            () => {
                let $$res: Nullable<element4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element4, };
                }
                return $$res;
            });
    }
    public matchelement5($$dpth: number, $$cr?: ErrorTracker): Nullable<element5> {
        return this.run<element5>($$dpth,
            () => {
                let $$res: Nullable<element5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-hover-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element5, };
                }
                return $$res;
            });
    }
    public matchelement6($$dpth: number, $$cr?: ErrorTracker): Nullable<element6> {
        return this.run<element6>($$dpth,
            () => {
                let $$res: Nullable<element6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-margin-bottom)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element6, };
                }
                return $$res;
            });
    }
    public matchelement7($$dpth: number, $$cr?: ErrorTracker): Nullable<element7> {
        return this.run<element7>($$dpth,
            () => {
                let $$res: Nullable<element7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$action-sheet-max-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element7, };
                }
                return $$res;
            });
    }
    public matchelement8($$dpth: number, $$cr?: ErrorTracker): Nullable<element8> {
        return this.run<element8>($$dpth,
            () => {
                let $$res: Nullable<element8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$backdrop-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element8, };
                }
                return $$res;
            });
    }
    public matchelement9($$dpth: number, $$cr?: ErrorTracker): Nullable<element9> {
        return this.run<element9>($$dpth,
            () => {
                let $$res: Nullable<element9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$backdrop-opacity)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element9, };
                }
                return $$res;
            });
    }
    public matchelement10($$dpth: number, $$cr?: ErrorTracker): Nullable<element10> {
        return this.run<element10>($$dpth,
            () => {
                let $$res: Nullable<element10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-active)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element10, };
                }
                return $$res;
            });
    }
    public matchelement11($$dpth: number, $$cr?: ErrorTracker): Nullable<element11> {
        return this.run<element11>($$dpth,
            () => {
                let $$res: Nullable<element11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element11, };
                }
                return $$res;
            });
    }
    public matchelement12($$dpth: number, $$cr?: ErrorTracker): Nullable<element12> {
        return this.run<element12>($$dpth,
            () => {
                let $$res: Nullable<element12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-hover)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element12, };
                }
                return $$res;
            });
    }
    public matchelement13($$dpth: number, $$cr?: ErrorTracker): Nullable<element13> {
        return this.run<element13>($$dpth,
            () => {
                let $$res: Nullable<element13> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-primary)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element13, };
                }
                return $$res;
            });
    }
    public matchelement14($$dpth: number, $$cr?: ErrorTracker): Nullable<element14> {
        return this.run<element14>($$dpth,
            () => {
                let $$res: Nullable<element14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element14, };
                }
                return $$res;
            });
    }
    public matchelement15($$dpth: number, $$cr?: ErrorTracker): Nullable<element15> {
        return this.run<element15>($$dpth,
            () => {
                let $$res: Nullable<element15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-secondary)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element15, };
                }
                return $$res;
            });
    }
    public matchelement16($$dpth: number, $$cr?: ErrorTracker): Nullable<element16> {
        return this.run<element16>($$dpth,
            () => {
                let $$res: Nullable<element16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$breadcrumb-separator)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element16, };
                }
                return $$res;
            });
    }
    public matchelement17($$dpth: number, $$cr?: ErrorTracker): Nullable<element17> {
        return this.run<element17>($$dpth,
            () => {
                let $$res: Nullable<element17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-big-circular-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element17, };
                }
                return $$res;
            });
    }
    public matchelement18($$dpth: number, $$cr?: ErrorTracker): Nullable<element18> {
        return this.run<element18>($$dpth,
            () => {
                let $$res: Nullable<element18> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-big-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element18, };
                }
                return $$res;
            });
    }
    public matchelement19($$dpth: number, $$cr?: ErrorTracker): Nullable<element19> {
        return this.run<element19>($$dpth,
            () => {
                let $$res: Nullable<element19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-big-icon-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element19, };
                }
                return $$res;
            });
    }
    public matchelement20($$dpth: number, $$cr?: ErrorTracker): Nullable<element20> {
        return this.run<element20>($$dpth,
            () => {
                let $$res: Nullable<element20> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-big-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element20, };
                }
                return $$res;
            });
    }
    public matchelement21($$dpth: number, $$cr?: ErrorTracker): Nullable<element21> {
        return this.run<element21>($$dpth,
            () => {
                let $$res: Nullable<element21> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-big-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element21, };
                }
                return $$res;
            });
    }
    public matchelement22($$dpth: number, $$cr?: ErrorTracker): Nullable<element22> {
        return this.run<element22>($$dpth,
            () => {
                let $$res: Nullable<element22> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element22, };
                }
                return $$res;
            });
    }
    public matchelement23($$dpth: number, $$cr?: ErrorTracker): Nullable<element23> {
        return this.run<element23>($$dpth,
            () => {
                let $$res: Nullable<element23> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element23, };
                }
                return $$res;
            });
    }
    public matchelement24($$dpth: number, $$cr?: ErrorTracker): Nullable<element24> {
        return this.run<element24>($$dpth,
            () => {
                let $$res: Nullable<element24> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-circular-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element24, };
                }
                return $$res;
            });
    }
    public matchelement25($$dpth: number, $$cr?: ErrorTracker): Nullable<element25> {
        return this.run<element25>($$dpth,
            () => {
                let $$res: Nullable<element25> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element25, };
                }
                return $$res;
            });
    }
    public matchelement26($$dpth: number, $$cr?: ErrorTracker): Nullable<element26> {
        return this.run<element26>($$dpth,
            () => {
                let $$res: Nullable<element26> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-font-weight)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element26, };
                }
                return $$res;
            });
    }
    public matchelement27($$dpth: number, $$cr?: ErrorTracker): Nullable<element27> {
        return this.run<element27>($$dpth,
            () => {
                let $$res: Nullable<element27> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-icon-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element27, };
                }
                return $$res;
            });
    }
    public matchelement28($$dpth: number, $$cr?: ErrorTracker): Nullable<element28> {
        return this.run<element28>($$dpth,
            () => {
                let $$res: Nullable<element28> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element28, };
                }
                return $$res;
            });
    }
    public matchelement29($$dpth: number, $$cr?: ErrorTracker): Nullable<element29> {
        return this.run<element29>($$dpth,
            () => {
                let $$res: Nullable<element29> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element29, };
                }
                return $$res;
            });
    }
    public matchelement30($$dpth: number, $$cr?: ErrorTracker): Nullable<element30> {
        return this.run<element30>($$dpth,
            () => {
                let $$res: Nullable<element30> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element30, };
                }
                return $$res;
            });
    }
    public matchelement31($$dpth: number, $$cr?: ErrorTracker): Nullable<element31> {
        return this.run<element31>($$dpth,
            () => {
                let $$res: Nullable<element31> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-small-circular-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element31, };
                }
                return $$res;
            });
    }
    public matchelement32($$dpth: number, $$cr?: ErrorTracker): Nullable<element32> {
        return this.run<element32>($$dpth,
            () => {
                let $$res: Nullable<element32> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-small-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element32, };
                }
                return $$res;
            });
    }
    public matchelement33($$dpth: number, $$cr?: ErrorTracker): Nullable<element33> {
        return this.run<element33>($$dpth,
            () => {
                let $$res: Nullable<element33> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-small-icon-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element33, };
                }
                return $$res;
            });
    }
    public matchelement34($$dpth: number, $$cr?: ErrorTracker): Nullable<element34> {
        return this.run<element34>($$dpth,
            () => {
                let $$res: Nullable<element34> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-small-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element34, };
                }
                return $$res;
            });
    }
    public matchelement35($$dpth: number, $$cr?: ErrorTracker): Nullable<element35> {
        return this.run<element35>($$dpth,
            () => {
                let $$res: Nullable<element35> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-small-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element35, };
                }
                return $$res;
            });
    }
    public matchelement36($$dpth: number, $$cr?: ErrorTracker): Nullable<element36> {
        return this.run<element36>($$dpth,
            () => {
                let $$res: Nullable<element36> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$button-text-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element36, };
                }
                return $$res;
            });
    }
    public matchelement37($$dpth: number, $$cr?: ErrorTracker): Nullable<element37> {
        return this.run<element37>($$dpth,
            () => {
                let $$res: Nullable<element37> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$card-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element37, };
                }
                return $$res;
            });
    }
    public matchelement38($$dpth: number, $$cr?: ErrorTracker): Nullable<element38> {
        return this.run<element38>($$dpth,
            () => {
                let $$res: Nullable<element38> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$card-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element38, };
                }
                return $$res;
            });
    }
    public matchelement39($$dpth: number, $$cr?: ErrorTracker): Nullable<element39> {
        return this.run<element39>($$dpth,
            () => {
                let $$res: Nullable<element39> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$card-padding-horizontal)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element39, };
                }
                return $$res;
            });
    }
    public matchelement40($$dpth: number, $$cr?: ErrorTracker): Nullable<element40> {
        return this.run<element40>($$dpth,
            () => {
                let $$res: Nullable<element40> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$card-padding-vertical)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element40, };
                }
                return $$res;
            });
    }
    public matchelement41($$dpth: number, $$cr?: ErrorTracker): Nullable<element41> {
        return this.run<element41>($$dpth,
            () => {
                let $$res: Nullable<element41> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element41, };
                }
                return $$res;
            });
    }
    public matchelement42($$dpth: number, $$cr?: ErrorTracker): Nullable<element42> {
        return this.run<element42>($$dpth,
            () => {
                let $$res: Nullable<element42> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-date-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element42, };
                }
                return $$res;
            });
    }
    public matchelement43($$dpth: number, $$cr?: ErrorTracker): Nullable<element43> {
        return this.run<element43>($$dpth,
            () => {
                let $$res: Nullable<element43> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-date-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element43, };
                }
                return $$res;
            });
    }
    public matchelement44($$dpth: number, $$cr?: ErrorTracker): Nullable<element44> {
        return this.run<element44>($$dpth,
            () => {
                let $$res: Nullable<element44> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-font-weight)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element44, };
                }
                return $$res;
            });
    }
    public matchelement45($$dpth: number, $$cr?: ErrorTracker): Nullable<element45> {
        return this.run<element45>($$dpth,
            () => {
                let $$res: Nullable<element45> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element45, };
                }
                return $$res;
            });
    }
    public matchelement46($$dpth: number, $$cr?: ErrorTracker): Nullable<element46> {
        return this.run<element46>($$dpth,
            () => {
                let $$res: Nullable<element46> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-offset)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element46, };
                }
                return $$res;
            });
    }
    public matchelement47($$dpth: number, $$cr?: ErrorTracker): Nullable<element47> {
        return this.run<element47>($$dpth,
            () => {
                let $$res: Nullable<element47> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-other-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element47, };
                }
                return $$res;
            });
    }
    public matchelement48($$dpth: number, $$cr?: ErrorTracker): Nullable<element48> {
        return this.run<element48>($$dpth,
            () => {
                let $$res: Nullable<element48> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-other-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element48, };
                }
                return $$res;
            });
    }
    public matchelement49($$dpth: number, $$cr?: ErrorTracker): Nullable<element49> {
        return this.run<element49>($$dpth,
            () => {
                let $$res: Nullable<element49> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-other-pointer-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element49, };
                }
                return $$res;
            });
    }
    public matchelement50($$dpth: number, $$cr?: ErrorTracker): Nullable<element50> {
        return this.run<element50>($$dpth,
            () => {
                let $$res: Nullable<element50> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-pointer-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element50, };
                }
                return $$res;
            });
    }
    public matchelement51($$dpth: number, $$cr?: ErrorTracker): Nullable<element51> {
        return this.run<element51>($$dpth,
            () => {
                let $$res: Nullable<element51> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-pointer-top)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element51, };
                }
                return $$res;
            });
    }
    public matchelement52($$dpth: number, $$cr?: ErrorTracker): Nullable<element52> {
        return this.run<element52>($$dpth,
            () => {
                let $$res: Nullable<element52> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-you-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element52, };
                }
                return $$res;
            });
    }
    public matchelement53($$dpth: number, $$cr?: ErrorTracker): Nullable<element53> {
        return this.run<element53>($$dpth,
            () => {
                let $$res: Nullable<element53> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-you-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element53, };
                }
                return $$res;
            });
    }
    public matchelement54($$dpth: number, $$cr?: ErrorTracker): Nullable<element54> {
        return this.run<element54>($$dpth,
            () => {
                let $$res: Nullable<element54> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-message-you-pointer-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element54, };
                }
                return $$res;
            });
    }
    public matchelement55($$dpth: number, $$cr?: ErrorTracker): Nullable<element55> {
        return this.run<element55>($$dpth,
            () => {
                let $$res: Nullable<element55> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-other-date-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element55, };
                }
                return $$res;
            });
    }
    public matchelement56($$dpth: number, $$cr?: ErrorTracker): Nullable<element56> {
        return this.run<element56>($$dpth,
            () => {
                let $$res: Nullable<element56> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$chat-you-date-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element56, };
                }
                return $$res;
            });
    }
    public matchelement57($$dpth: number, $$cr?: ErrorTracker): Nullable<element57> {
        return this.run<element57>($$dpth,
            () => {
                let $$res: Nullable<element57> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$checkbox-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element57, };
                }
                return $$res;
            });
    }
    public matchelement58($$dpth: number, $$cr?: ErrorTracker): Nullable<element58> {
        return this.run<element58>($$dpth,
            () => {
                let $$res: Nullable<element58> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$checkbox-border-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element58, };
                }
                return $$res;
            });
    }
    public matchelement59($$dpth: number, $$cr?: ErrorTracker): Nullable<element59> {
        return this.run<element59>($$dpth,
            () => {
                let $$res: Nullable<element59> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$checkbox-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element59, };
                }
                return $$res;
            });
    }
    public matchelement60($$dpth: number, $$cr?: ErrorTracker): Nullable<element60> {
        return this.run<element60>($$dpth,
            () => {
                let $$res: Nullable<element60> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$checkbox-tick-thickness)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element60, };
                }
                return $$res;
            });
    }
    public matchelement61($$dpth: number, $$cr?: ErrorTracker): Nullable<element61> {
        return this.run<element61>($$dpth,
            () => {
                let $$res: Nullable<element61> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$dark)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element61, };
                }
                return $$res;
            });
    }
    public matchelement62($$dpth: number, $$cr?: ErrorTracker): Nullable<element62> {
        return this.run<element62>($$dpth,
            () => {
                let $$res: Nullable<element62> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$datatable-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element62, };
                }
                return $$res;
            });
    }
    public matchelement63($$dpth: number, $$cr?: ErrorTracker): Nullable<element63> {
        return this.run<element63>($$dpth,
            () => {
                let $$res: Nullable<element63> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$datatable-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element63, };
                }
                return $$res;
            });
    }
    public matchelement64($$dpth: number, $$cr?: ErrorTracker): Nullable<element64> {
        return this.run<element64>($$dpth,
            () => {
                let $$res: Nullable<element64> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$datetime-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element64, };
                }
                return $$res;
            });
    }
    public matchelement65($$dpth: number, $$cr?: ErrorTracker): Nullable<element65> {
        return this.run<element65>($$dpth,
            () => {
                let $$res: Nullable<element65> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$datetime-range-space)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element65, };
                }
                return $$res;
            });
    }
    public matchelement66($$dpth: number, $$cr?: ErrorTracker): Nullable<element66> {
        return this.run<element66>($$dpth,
            () => {
                let $$res: Nullable<element66> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$dimmed-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element66, };
                }
                return $$res;
            });
    }
    public matchelement67($$dpth: number, $$cr?: ErrorTracker): Nullable<element67> {
        return this.run<element67>($$dpth,
            () => {
                let $$res: Nullable<element67> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element67, };
                }
                return $$res;
            });
    }
    public matchelement68($$dpth: number, $$cr?: ErrorTracker): Nullable<element68> {
        return this.run<element68>($$dpth,
            () => {
                let $$res: Nullable<element68> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element68, };
                }
                return $$res;
            });
    }
    public matchelement69($$dpth: number, $$cr?: ErrorTracker): Nullable<element69> {
        return this.run<element69>($$dpth,
            () => {
                let $$res: Nullable<element69> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element69, };
                }
                return $$res;
            });
    }
    public matchelement70($$dpth: number, $$cr?: ErrorTracker): Nullable<element70> {
        return this.run<element70>($$dpth,
            () => {
                let $$res: Nullable<element70> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element70, };
                }
                return $$res;
            });
    }
    public matchelement71($$dpth: number, $$cr?: ErrorTracker): Nullable<element71> {
        return this.run<element71>($$dpth,
            () => {
                let $$res: Nullable<element71> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-header-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element71, };
                }
                return $$res;
            });
    }
    public matchelement72($$dpth: number, $$cr?: ErrorTracker): Nullable<element72> {
        return this.run<element72>($$dpth,
            () => {
                let $$res: Nullable<element72> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-icon-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element72, };
                }
                return $$res;
            });
    }
    public matchelement73($$dpth: number, $$cr?: ErrorTracker): Nullable<element73> {
        return this.run<element73>($$dpth,
            () => {
                let $$res: Nullable<element73> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-screen-width-threshold)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element73, };
                }
                return $$res;
            });
    }
    public matchelement74($$dpth: number, $$cr?: ErrorTracker): Nullable<element74> {
        return this.run<element74>($$dpth,
            () => {
                let $$res: Nullable<element74> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$drawer-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element74, };
                }
                return $$res;
            });
    }
    public matchelement75($$dpth: number, $$cr?: ErrorTracker): Nullable<element75> {
        return this.run<element75>($$dpth,
            () => {
                let $$res: Nullable<element75> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$fab-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element75, };
                }
                return $$res;
            });
    }
    public matchelement76($$dpth: number, $$cr?: ErrorTracker): Nullable<element76> {
        return this.run<element76>($$dpth,
            () => {
                let $$res: Nullable<element76> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$faded)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element76, };
                }
                return $$res;
            });
    }
    public matchelement77($$dpth: number, $$cr?: ErrorTracker): Nullable<element77> {
        return this.run<element77>($$dpth,
            () => {
                let $$res: Nullable<element77> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-active-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element77, };
                }
                return $$res;
            });
    }
    public matchelement78($$dpth: number, $$cr?: ErrorTracker): Nullable<element78> {
        return this.run<element78>($$dpth,
            () => {
                let $$res: Nullable<element78> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element78, };
                }
                return $$res;
            });
    }
    public matchelement79($$dpth: number, $$cr?: ErrorTracker): Nullable<element79> {
        return this.run<element79>($$dpth,
            () => {
                let $$res: Nullable<element79> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element79, };
                }
                return $$res;
            });
    }
    public matchelement80($$dpth: number, $$cr?: ErrorTracker): Nullable<element80> {
        return this.run<element80>($$dpth,
            () => {
                let $$res: Nullable<element80> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-darker-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element80, };
                }
                return $$res;
            });
    }
    public matchelement81($$dpth: number, $$cr?: ErrorTracker): Nullable<element81> {
        return this.run<element81>($$dpth,
            () => {
                let $$res: Nullable<element81> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-lighter-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element81, };
                }
                return $$res;
            });
    }
    public matchelement82($$dpth: number, $$cr?: ErrorTracker): Nullable<element82> {
        return this.run<element82>($$dpth,
            () => {
                let $$res: Nullable<element82> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$form-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element82, };
                }
                return $$res;
            });
    }
    public matchelement83($$dpth: number, $$cr?: ErrorTracker): Nullable<element83> {
        return this.run<element83>($$dpth,
            () => {
                let $$res: Nullable<element83> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$generic-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element83, };
                }
                return $$res;
            });
    }
    public matchelement84($$dpth: number, $$cr?: ErrorTracker): Nullable<element84> {
        return this.run<element84>($$dpth,
            () => {
                let $$res: Nullable<element84> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$generic-input-border-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element84, };
                }
                return $$res;
            });
    }
    public matchelement85($$dpth: number, $$cr?: ErrorTracker): Nullable<element85> {
        return this.run<element85>($$dpth,
            () => {
                let $$res: Nullable<element85> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$generic-input-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element85, };
                }
                return $$res;
            });
    }
    public matchelement86($$dpth: number, $$cr?: ErrorTracker): Nullable<element86> {
        return this.run<element86>($$dpth,
            () => {
                let $$res: Nullable<element86> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$generic-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element86, };
                }
                return $$res;
            });
    }
    public matchelement87($$dpth: number, $$cr?: ErrorTracker): Nullable<element87> {
        return this.run<element87>($$dpth,
            () => {
                let $$res: Nullable<element87> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$grid-big-gutter)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element87, };
                }
                return $$res;
            });
    }
    public matchelement88($$dpth: number, $$cr?: ErrorTracker): Nullable<element88> {
        return this.run<element88>($$dpth,
            () => {
                let $$res: Nullable<element88> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$grid-cols)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element88, };
                }
                return $$res;
            });
    }
    public matchelement89($$dpth: number, $$cr?: ErrorTracker): Nullable<element89> {
        return this.run<element89>($$dpth,
            () => {
                let $$res: Nullable<element89> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$grid-large-gutter)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element89, };
                }
                return $$res;
            });
    }
    public matchelement90($$dpth: number, $$cr?: ErrorTracker): Nullable<element90> {
        return this.run<element90>($$dpth,
            () => {
                let $$res: Nullable<element90> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$grid-medium-gutter)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element90, };
                }
                return $$res;
            });
    }
    public matchelement91($$dpth: number, $$cr?: ErrorTracker): Nullable<element91> {
        return this.run<element91>($$dpth,
            () => {
                let $$res: Nullable<element91> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$grid-small-gutter)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element91, };
                }
                return $$res;
            });
    }
    public matchelement92($$dpth: number, $$cr?: ErrorTracker): Nullable<element92> {
        return this.run<element92>($$dpth,
            () => {
                let $$res: Nullable<element92> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$has-error)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element92, };
                }
                return $$res;
            });
    }
    public matchelement93($$dpth: number, $$cr?: ErrorTracker): Nullable<element93> {
        return this.run<element93>($$dpth,
            () => {
                let $$res: Nullable<element93> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$icon-font-family)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element93, };
                }
                return $$res;
            });
    }
    public matchelement94($$dpth: number, $$cr?: ErrorTracker): Nullable<element94> {
        return this.run<element94>($$dpth,
            () => {
                let $$res: Nullable<element94> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$icon-font-style)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element94, };
                }
                return $$res;
            });
    }
    public matchelement95($$dpth: number, $$cr?: ErrorTracker): Nullable<element95> {
        return this.run<element95>($$dpth,
            () => {
                let $$res: Nullable<element95> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$icon-font-weight)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element95, };
                }
                return $$res;
            });
    }
    public matchelement96($$dpth: number, $$cr?: ErrorTracker): Nullable<element96> {
        return this.run<element96>($$dpth,
            () => {
                let $$res: Nullable<element96> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$icon-letter-spacing)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element96, };
                }
                return $$res;
            });
    }
    public matchelement97($$dpth: number, $$cr?: ErrorTracker): Nullable<element97> {
        return this.run<element97>($$dpth,
            () => {
                let $$res: Nullable<element97> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$icon-text-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element97, };
                }
                return $$res;
            });
    }
    public matchelement98($$dpth: number, $$cr?: ErrorTracker): Nullable<element98> {
        return this.run<element98>($$dpth,
            () => {
                let $$res: Nullable<element98> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$info)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element98, };
                }
                return $$res;
            });
    }
    public matchelement99($$dpth: number, $$cr?: ErrorTracker): Nullable<element99> {
        return this.run<element99>($$dpth,
            () => {
                let $$res: Nullable<element99> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$ios-statusbar-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element99, };
                }
                return $$res;
            });
    }
    public matchelement100($$dpth: number, $$cr?: ErrorTracker): Nullable<element100> {
        return this.run<element100>($$dpth,
            () => {
                let $$res: Nullable<element100> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$item-content-label-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element100, };
                }
                return $$res;
            });
    }
    public matchelement101($$dpth: number, $$cr?: ErrorTracker): Nullable<element101> {
        return this.run<element101>($$dpth,
            () => {
                let $$res: Nullable<element101> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$item-label-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element101, };
                }
                return $$res;
            });
    }
    public matchelement102($$dpth: number, $$cr?: ErrorTracker): Nullable<element102> {
        return this.run<element102>($$dpth,
            () => {
                let $$res: Nullable<element102> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$item-primary-secondary-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element102, };
                }
                return $$res;
            });
    }
    public matchelement103($$dpth: number, $$cr?: ErrorTracker): Nullable<element103> {
        return this.run<element103>($$dpth,
            () => {
                let $$res: Nullable<element103> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$label-before-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element103, };
                }
                return $$res;
            });
    }
    public matchelement104($$dpth: number, $$cr?: ErrorTracker): Nullable<element104> {
        return this.run<element104>($$dpth,
            () => {
                let $$res: Nullable<element104> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$label-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element104, };
                }
                return $$res;
            });
    }
    public matchelement105($$dpth: number, $$cr?: ErrorTracker): Nullable<element105> {
        return this.run<element105>($$dpth,
            () => {
                let $$res: Nullable<element105> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$label-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element105, };
                }
                return $$res;
            });
    }
    public matchelement106($$dpth: number, $$cr?: ErrorTracker): Nullable<element106> {
        return this.run<element106>($$dpth,
            () => {
                let $$res: Nullable<element106> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$label-padding-horizontal)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element106, };
                }
                return $$res;
            });
    }
    public matchelement107($$dpth: number, $$cr?: ErrorTracker): Nullable<element107> {
        return this.run<element107>($$dpth,
            () => {
                let $$res: Nullable<element107> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$label-padding-vertical)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element107, };
                }
                return $$res;
            });
    }
    public matchelement108($$dpth: number, $$cr?: ErrorTracker): Nullable<element108> {
        return this.run<element108>($$dpth,
            () => {
                let $$res: Nullable<element108> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-big)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element108, };
                }
                return $$res;
            });
    }
    public matchelement109($$dpth: number, $$cr?: ErrorTracker): Nullable<element109> {
        return this.run<element109>($$dpth,
            () => {
                let $$res: Nullable<element109> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element109, };
                }
                return $$res;
            });
    }
    public matchelement110($$dpth: number, $$cr?: ErrorTracker): Nullable<element110> {
        return this.run<element110>($$dpth,
            () => {
                let $$res: Nullable<element110> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-footer-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element110, };
                }
                return $$res;
            });
    }
    public matchelement111($$dpth: number, $$cr?: ErrorTracker): Nullable<element111> {
        return this.run<element111>($$dpth,
            () => {
                let $$res: Nullable<element111> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-header-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element111, };
                }
                return $$res;
            });
    }
    public matchelement112($$dpth: number, $$cr?: ErrorTracker): Nullable<element112> {
        return this.run<element112>($$dpth,
            () => {
                let $$res: Nullable<element112> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-medium)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element112, };
                }
                return $$res;
            });
    }
    public matchelement113($$dpth: number, $$cr?: ErrorTracker): Nullable<element113> {
        return this.run<element113>($$dpth,
            () => {
                let $$res: Nullable<element113> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-small)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element113, };
                }
                return $$res;
            });
    }
    public matchelement114($$dpth: number, $$cr?: ErrorTracker): Nullable<element114> {
        return this.run<element114>($$dpth,
            () => {
                let $$res: Nullable<element114> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$layout-toolbar-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element114, };
                }
                return $$res;
            });
    }
    public matchelement115($$dpth: number, $$cr?: ErrorTracker): Nullable<element115> {
        return this.run<element115>($$dpth,
            () => {
                let $$res: Nullable<element115> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$light)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element115, };
                }
                return $$res;
            });
    }
    public matchelement116($$dpth: number, $$cr?: ErrorTracker): Nullable<element116> {
        return this.run<element116>($$dpth,
            () => {
                let $$res: Nullable<element116> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$light-dimmed-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element116, };
                }
                return $$res;
            });
    }
    public matchelement117($$dpth: number, $$cr?: ErrorTracker): Nullable<element117> {
        return this.run<element117>($$dpth,
            () => {
                let $$res: Nullable<element117> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$link-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element117, };
                }
                return $$res;
            });
    }
    public matchelement118($$dpth: number, $$cr?: ErrorTracker): Nullable<element118> {
        return this.run<element118>($$dpth,
            () => {
                let $$res: Nullable<element118> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$link-color-active)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element118, };
                }
                return $$res;
            });
    }
    public matchelement119($$dpth: number, $$cr?: ErrorTracker): Nullable<element119> {
        return this.run<element119>($$dpth,
            () => {
                let $$res: Nullable<element119> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$loading-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element119, };
                }
                return $$res;
            });
    }
    public matchelement120($$dpth: number, $$cr?: ErrorTracker): Nullable<element120> {
        return this.run<element120>($$dpth,
            () => {
                let $$res: Nullable<element120> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$media-avatar-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element120, };
                }
                return $$res;
            });
    }
    public matchelement121($$dpth: number, $$cr?: ErrorTracker): Nullable<element121> {
        return this.run<element121>($$dpth,
            () => {
                let $$res: Nullable<element121> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element121, };
                }
                return $$res;
            });
    }
    public matchelement122($$dpth: number, $$cr?: ErrorTracker): Nullable<element122> {
        return this.run<element122>($$dpth,
            () => {
                let $$res: Nullable<element122> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-body-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element122, };
                }
                return $$res;
            });
    }
    public matchelement123($$dpth: number, $$cr?: ErrorTracker): Nullable<element123> {
        return this.run<element123>($$dpth,
            () => {
                let $$res: Nullable<element123> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-body-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element123, };
                }
                return $$res;
            });
    }
    public matchelement124($$dpth: number, $$cr?: ErrorTracker): Nullable<element124> {
        return this.run<element124>($$dpth,
            () => {
                let $$res: Nullable<element124> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-body-text-align)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element124, };
                }
                return $$res;
            });
    }
    public matchelement125($$dpth: number, $$cr?: ErrorTracker): Nullable<element125> {
        return this.run<element125>($$dpth,
            () => {
                let $$res: Nullable<element125> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element125, };
                }
                return $$res;
            });
    }
    public matchelement126($$dpth: number, $$cr?: ErrorTracker): Nullable<element126> {
        return this.run<element126>($$dpth,
            () => {
                let $$res: Nullable<element126> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-buttons-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element126, };
                }
                return $$res;
            });
    }
    public matchelement127($$dpth: number, $$cr?: ErrorTracker): Nullable<element127> {
        return this.run<element127>($$dpth,
            () => {
                let $$res: Nullable<element127> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-header-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element127, };
                }
                return $$res;
            });
    }
    public matchelement128($$dpth: number, $$cr?: ErrorTracker): Nullable<element128> {
        return this.run<element128>($$dpth,
            () => {
                let $$res: Nullable<element128> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-header-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element128, };
                }
                return $$res;
            });
    }
    public matchelement129($$dpth: number, $$cr?: ErrorTracker): Nullable<element129> {
        return this.run<element129>($$dpth,
            () => {
                let $$res: Nullable<element129> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-header-text-align)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element129, };
                }
                return $$res;
            });
    }
    public matchelement130($$dpth: number, $$cr?: ErrorTracker): Nullable<element130> {
        return this.run<element130>($$dpth,
            () => {
                let $$res: Nullable<element130> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element130, };
                }
                return $$res;
            });
    }
    public matchelement131($$dpth: number, $$cr?: ErrorTracker): Nullable<element131> {
        return this.run<element131>($$dpth,
            () => {
                let $$res: Nullable<element131> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-max-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element131, };
                }
                return $$res;
            });
    }
    public matchelement132($$dpth: number, $$cr?: ErrorTracker): Nullable<element132> {
        return this.run<element132>($$dpth,
            () => {
                let $$res: Nullable<element132> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-max-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element132, };
                }
                return $$res;
            });
    }
    public matchelement133($$dpth: number, $$cr?: ErrorTracker): Nullable<element133> {
        return this.run<element133>($$dpth,
            () => {
                let $$res: Nullable<element133> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-scroll-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element133, };
                }
                return $$res;
            });
    }
    public matchelement134($$dpth: number, $$cr?: ErrorTracker): Nullable<element134> {
        return this.run<element134>($$dpth,
            () => {
                let $$res: Nullable<element134> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-slim-body-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element134, };
                }
                return $$res;
            });
    }
    public matchelement135($$dpth: number, $$cr?: ErrorTracker): Nullable<element135> {
        return this.run<element135>($$dpth,
            () => {
                let $$res: Nullable<element135> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$modal-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element135, };
                }
                return $$res;
            });
    }
    public matchelement136($$dpth: number, $$cr?: ErrorTracker): Nullable<element136> {
        return this.run<element136>($$dpth,
            () => {
                let $$res: Nullable<element136> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$negative)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element136, };
                }
                return $$res;
            });
    }
    public matchelement137($$dpth: number, $$cr?: ErrorTracker): Nullable<element137> {
        return this.run<element137>($$dpth,
            () => {
                let $$res: Nullable<element137> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$paralax-text-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element137, };
                }
                return $$res;
            });
    }
    public matchelement138($$dpth: number, $$cr?: ErrorTracker): Nullable<element138> {
        return this.run<element138>($$dpth,
            () => {
                let $$res: Nullable<element138> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$picker-textfield-min-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element138, };
                }
                return $$res;
            });
    }
    public matchelement139($$dpth: number, $$cr?: ErrorTracker): Nullable<element139> {
        return this.run<element139>($$dpth,
            () => {
                let $$res: Nullable<element139> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$popover-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element139, };
                }
                return $$res;
            });
    }
    public matchelement140($$dpth: number, $$cr?: ErrorTracker): Nullable<element140> {
        return this.run<element140>($$dpth,
            () => {
                let $$res: Nullable<element140> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$popover-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element140, };
                }
                return $$res;
            });
    }
    public matchelement141($$dpth: number, $$cr?: ErrorTracker): Nullable<element141> {
        return this.run<element141>($$dpth,
            () => {
                let $$res: Nullable<element141> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$positive)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element141, };
                }
                return $$res;
            });
    }
    public matchelement142($$dpth: number, $$cr?: ErrorTracker): Nullable<element142> {
        return this.run<element142>($$dpth,
            () => {
                let $$res: Nullable<element142> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$primary)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element142, };
                }
                return $$res;
            });
    }
    public matchelement143($$dpth: number, $$cr?: ErrorTracker): Nullable<element143> {
        return this.run<element143>($$dpth,
            () => {
                let $$res: Nullable<element143> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element143, };
                }
                return $$res;
            });
    }
    public matchelement144($$dpth: number, $$cr?: ErrorTracker): Nullable<element144> {
        return this.run<element144>($$dpth,
            () => {
                let $$res: Nullable<element144> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-default-track-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element144, };
                }
                return $$res;
            });
    }
    public matchelement145($$dpth: number, $$cr?: ErrorTracker): Nullable<element145> {
        return this.run<element145>($$dpth,
            () => {
                let $$res: Nullable<element145> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element145, };
                }
                return $$res;
            });
    }
    public matchelement146($$dpth: number, $$cr?: ErrorTracker): Nullable<element146> {
        return this.run<element146>($$dpth,
            () => {
                let $$res: Nullable<element146> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-track-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element146, };
                }
                return $$res;
            });
    }
    public matchelement147($$dpth: number, $$cr?: ErrorTracker): Nullable<element147> {
        return this.run<element147>($$dpth,
            () => {
                let $$res: Nullable<element147> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-track-desktop-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element147, };
                }
                return $$res;
            });
    }
    public matchelement148($$dpth: number, $$cr?: ErrorTracker): Nullable<element148> {
        return this.run<element148>($$dpth,
            () => {
                let $$res: Nullable<element148> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-track-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element148, };
                }
                return $$res;
            });
    }
    public matchelement149($$dpth: number, $$cr?: ErrorTracker): Nullable<element149> {
        return this.run<element149>($$dpth,
            () => {
                let $$res: Nullable<element149> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$progress-transition)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element149, };
                }
                return $$res;
            });
    }
    public matchelement150($$dpth: number, $$cr?: ErrorTracker): Nullable<element150> {
        return this.run<element150>($$dpth,
            () => {
                let $$res: Nullable<element150> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$pull-to-refresh-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element150, };
                }
                return $$res;
            });
    }
    public matchelement151($$dpth: number, $$cr?: ErrorTracker): Nullable<element151> {
        return this.run<element151>($$dpth,
            () => {
                let $$res: Nullable<element151> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$pull-to-refresh-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element151, };
                }
                return $$res;
            });
    }
    public matchelement152($$dpth: number, $$cr?: ErrorTracker): Nullable<element152> {
        return this.run<element152>($$dpth,
            () => {
                let $$res: Nullable<element152> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$pull-to-refresh-icon-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element152, };
                }
                return $$res;
            });
    }
    public matchelement153($$dpth: number, $$cr?: ErrorTracker): Nullable<element153> {
        return this.run<element153>($$dpth,
            () => {
                let $$res: Nullable<element153> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$radio-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element153, };
                }
                return $$res;
            });
    }
    public matchelement154($$dpth: number, $$cr?: ErrorTracker): Nullable<element154> {
        return this.run<element154>($$dpth,
            () => {
                let $$res: Nullable<element154> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$radio-border-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element154, };
                }
                return $$res;
            });
    }
    public matchelement155($$dpth: number, $$cr?: ErrorTracker): Nullable<element155> {
        return this.run<element155>($$dpth,
            () => {
                let $$res: Nullable<element155> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$radio-picker-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element155, };
                }
                return $$res;
            });
    }
    public matchelement156($$dpth: number, $$cr?: ErrorTracker): Nullable<element156> {
        return this.run<element156>($$dpth,
            () => {
                let $$res: Nullable<element156> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$radio-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element156, };
                }
                return $$res;
            });
    }
    public matchelement157($$dpth: number, $$cr?: ErrorTracker): Nullable<element157> {
        return this.run<element157>($$dpth,
            () => {
                let $$res: Nullable<element157> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$radio-tick-thickness)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element157, };
                }
                return $$res;
            });
    }
    public matchelement158($$dpth: number, $$cr?: ErrorTracker): Nullable<element158> {
        return this.run<element158>($$dpth,
            () => {
                let $$res: Nullable<element158> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-active-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element158, };
                }
                return $$res;
            });
    }
    public matchelement159($$dpth: number, $$cr?: ErrorTracker): Nullable<element159> {
        return this.run<element159>($$dpth,
            () => {
                let $$res: Nullable<element159> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element159, };
                }
                return $$res;
            });
    }
    public matchelement160($$dpth: number, $$cr?: ErrorTracker): Nullable<element160> {
        return this.run<element160>($$dpth,
            () => {
                let $$res: Nullable<element160> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-handle-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element160, };
                }
                return $$res;
            });
    }
    public matchelement161($$dpth: number, $$cr?: ErrorTracker): Nullable<element161> {
        return this.run<element161>($$dpth,
            () => {
                let $$res: Nullable<element161> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-handle-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element161, };
                }
                return $$res;
            });
    }
    public matchelement162($$dpth: number, $$cr?: ErrorTracker): Nullable<element162> {
        return this.run<element162>($$dpth,
            () => {
                let $$res: Nullable<element162> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-handle-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element162, };
                }
                return $$res;
            });
    }
    public matchelement163($$dpth: number, $$cr?: ErrorTracker): Nullable<element163> {
        return this.run<element163>($$dpth,
            () => {
                let $$res: Nullable<element163> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element163, };
                }
                return $$res;
            });
    }
    public matchelement164($$dpth: number, $$cr?: ErrorTracker): Nullable<element164> {
        return this.run<element164>($$dpth,
            () => {
                let $$res: Nullable<element164> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-mark-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element164, };
                }
                return $$res;
            });
    }
    public matchelement165($$dpth: number, $$cr?: ErrorTracker): Nullable<element165> {
        return this.run<element165>($$dpth,
            () => {
                let $$res: Nullable<element165> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$range-track-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element165, };
                }
                return $$res;
            });
    }
    public matchelement166($$dpth: number, $$cr?: ErrorTracker): Nullable<element166> {
        return this.run<element166>($$dpth,
            () => {
                let $$res: Nullable<element166> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$rating-active-grade-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element166, };
                }
                return $$res;
            });
    }
    public matchelement167($$dpth: number, $$cr?: ErrorTracker): Nullable<element167> {
        return this.run<element167>($$dpth,
            () => {
                let $$res: Nullable<element167> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$rating-grade-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element167, };
                }
                return $$res;
            });
    }
    public matchelement168($$dpth: number, $$cr?: ErrorTracker): Nullable<element168> {
        return this.run<element168>($$dpth,
            () => {
                let $$res: Nullable<element168> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$rating-grade-exselected-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element168, };
                }
                return $$res;
            });
    }
    public matchelement169($$dpth: number, $$cr?: ErrorTracker): Nullable<element169> {
        return this.run<element169>($$dpth,
            () => {
                let $$res: Nullable<element169> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$rating-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element169, };
                }
                return $$res;
            });
    }
    public matchelement170($$dpth: number, $$cr?: ErrorTracker): Nullable<element170> {
        return this.run<element170>($$dpth,
            () => {
                let $$res: Nullable<element170> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$secondary)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element170, };
                }
                return $$res;
            });
    }
    public matchelement171($$dpth: number, $$cr?: ErrorTracker): Nullable<element171> {
        return this.run<element171>($$dpth,
            () => {
                let $$res: Nullable<element171> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$shadow-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element171, };
                }
                return $$res;
            });
    }
    public matchelement172($$dpth: number, $$cr?: ErrorTracker): Nullable<element172> {
        return this.run<element172>($$dpth,
            () => {
                let $$res: Nullable<element172> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$shadow-transition)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element172, };
                }
                return $$res;
            });
    }
    public matchelement173($$dpth: number, $$cr?: ErrorTracker): Nullable<element173> {
        return this.run<element173>($$dpth,
            () => {
                let $$res: Nullable<element173> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-arrow-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element173, };
                }
                return $$res;
            });
    }
    public matchelement174($$dpth: number, $$cr?: ErrorTracker): Nullable<element174> {
        return this.run<element174>($$dpth,
            () => {
                let $$res: Nullable<element174> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-button-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element174, };
                }
                return $$res;
            });
    }
    public matchelement175($$dpth: number, $$cr?: ErrorTracker): Nullable<element175> {
        return this.run<element175>($$dpth,
            () => {
                let $$res: Nullable<element175> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-dots-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element175, };
                }
                return $$res;
            });
    }
    public matchelement176($$dpth: number, $$cr?: ErrorTracker): Nullable<element176> {
        return this.run<element176>($$dpth,
            () => {
                let $$res: Nullable<element176> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element176, };
                }
                return $$res;
            });
    }
    public matchelement177($$dpth: number, $$cr?: ErrorTracker): Nullable<element177> {
        return this.run<element177>($$dpth,
            () => {
                let $$res: Nullable<element177> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-opacity)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element177, };
                }
                return $$res;
            });
    }
    public matchelement178($$dpth: number, $$cr?: ErrorTracker): Nullable<element178> {
        return this.run<element178>($$dpth,
            () => {
                let $$res: Nullable<element178> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-opacity-active)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element178, };
                }
                return $$res;
            });
    }
    public matchelement179($$dpth: number, $$cr?: ErrorTracker): Nullable<element179> {
        return this.run<element179>($$dpth,
            () => {
                let $$res: Nullable<element179> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-ovelay-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element179, };
                }
                return $$res;
            });
    }
    public matchelement180($$dpth: number, $$cr?: ErrorTracker): Nullable<element180> {
        return this.run<element180>($$dpth,
            () => {
                let $$res: Nullable<element180> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$slider-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element180, };
                }
                return $$res;
            });
    }
    public matchelement181($$dpth: number, $$cr?: ErrorTracker): Nullable<element181> {
        return this.run<element181>($$dpth,
            () => {
                let $$res: Nullable<element181> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$table-border)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element181, };
                }
                return $$res;
            });
    }
    public matchelement182($$dpth: number, $$cr?: ErrorTracker): Nullable<element182> {
        return this.run<element182>($$dpth,
            () => {
                let $$res: Nullable<element182> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$table-highlight-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element182, };
                }
                return $$res;
            });
    }
    public matchelement183($$dpth: number, $$cr?: ErrorTracker): Nullable<element183> {
        return this.run<element183>($$dpth,
            () => {
                let $$res: Nullable<element183> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$table-stripe-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element183, };
                }
                return $$res;
            });
    }
    public matchelement184($$dpth: number, $$cr?: ErrorTracker): Nullable<element184> {
        return this.run<element184>($$dpth,
            () => {
                let $$res: Nullable<element184> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-active-border-bottom)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element184, };
                }
                return $$res;
            });
    }
    public matchelement185($$dpth: number, $$cr?: ErrorTracker): Nullable<element185> {
        return this.run<element185>($$dpth,
            () => {
                let $$res: Nullable<element185> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-active-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element185, };
                }
                return $$res;
            });
    }
    public matchelement186($$dpth: number, $$cr?: ErrorTracker): Nullable<element186> {
        return this.run<element186>($$dpth,
            () => {
                let $$res: Nullable<element186> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element186, };
                }
                return $$res;
            });
    }
    public matchelement187($$dpth: number, $$cr?: ErrorTracker): Nullable<element187> {
        return this.run<element187>($$dpth,
            () => {
                let $$res: Nullable<element187> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-screen-side-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element187, };
                }
                return $$res;
            });
    }
    public matchelement188($$dpth: number, $$cr?: ErrorTracker): Nullable<element188> {
        return this.run<element188>($$dpth,
            () => {
                let $$res: Nullable<element188> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-window-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element188, };
                }
                return $$res;
            });
    }
    public matchelement189($$dpth: number, $$cr?: ErrorTracker): Nullable<element189> {
        return this.run<element189>($$dpth,
            () => {
                let $$res: Nullable<element189> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-window-font-weight)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element189, };
                }
                return $$res;
            });
    }
    public matchelement190($$dpth: number, $$cr?: ErrorTracker): Nullable<element190> {
        return this.run<element190>($$dpth,
            () => {
                let $$res: Nullable<element190> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-window-icon-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element190, };
                }
                return $$res;
            });
    }
    public matchelement191($$dpth: number, $$cr?: ErrorTracker): Nullable<element191> {
        return this.run<element191>($$dpth,
            () => {
                let $$res: Nullable<element191> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-window-label-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element191, };
                }
                return $$res;
            });
    }
    public matchelement192($$dpth: number, $$cr?: ErrorTracker): Nullable<element192> {
        return this.run<element192>($$dpth,
            () => {
                let $$res: Nullable<element192> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-big-window-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element192, };
                }
                return $$res;
            });
    }
    public matchelement193($$dpth: number, $$cr?: ErrorTracker): Nullable<element193> {
        return this.run<element193>($$dpth,
            () => {
                let $$res: Nullable<element193> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-border-bottom)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element193, };
                }
                return $$res;
            });
    }
    public matchelement194($$dpth: number, $$cr?: ErrorTracker): Nullable<element194> {
        return this.run<element194>($$dpth,
            () => {
                let $$res: Nullable<element194> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element194, };
                }
                return $$res;
            });
    }
    public matchelement195($$dpth: number, $$cr?: ErrorTracker): Nullable<element195> {
        return this.run<element195>($$dpth,
            () => {
                let $$res: Nullable<element195> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element195, };
                }
                return $$res;
            });
    }
    public matchelement196($$dpth: number, $$cr?: ErrorTracker): Nullable<element196> {
        return this.run<element196>($$dpth,
            () => {
                let $$res: Nullable<element196> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-font-weight)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element196, };
                }
                return $$res;
            });
    }
    public matchelement197($$dpth: number, $$cr?: ErrorTracker): Nullable<element197> {
        return this.run<element197>($$dpth,
            () => {
                let $$res: Nullable<element197> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-highlight-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element197, };
                }
                return $$res;
            });
    }
    public matchelement198($$dpth: number, $$cr?: ErrorTracker): Nullable<element198> {
        return this.run<element198>($$dpth,
            () => {
                let $$res: Nullable<element198> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-icon-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element198, };
                }
                return $$res;
            });
    }
    public matchelement199($$dpth: number, $$cr?: ErrorTracker): Nullable<element199> {
        return this.run<element199>($$dpth,
            () => {
                let $$res: Nullable<element199> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-label-margin)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element199, };
                }
                return $$res;
            });
    }
    public matchelement200($$dpth: number, $$cr?: ErrorTracker): Nullable<element200> {
        return this.run<element200>($$dpth,
            () => {
                let $$res: Nullable<element200> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-min-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element200, };
                }
                return $$res;
            });
    }
    public matchelement201($$dpth: number, $$cr?: ErrorTracker): Nullable<element201> {
        return this.run<element201>($$dpth,
            () => {
                let $$res: Nullable<element201> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-order)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element201, };
                }
                return $$res;
            });
    }
    public matchelement202($$dpth: number, $$cr?: ErrorTracker): Nullable<element202> {
        return this.run<element202>($$dpth,
            () => {
                let $$res: Nullable<element202> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element202, };
                }
                return $$res;
            });
    }
    public matchelement203($$dpth: number, $$cr?: ErrorTracker): Nullable<element203> {
        return this.run<element203>($$dpth,
            () => {
                let $$res: Nullable<element203> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tabs-text-transform)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element203, };
                }
                return $$res;
            });
    }
    public matchelement204($$dpth: number, $$cr?: ErrorTracker): Nullable<element204> {
        return this.run<element204>($$dpth,
            () => {
                let $$res: Nullable<element204> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tertiary)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element204, };
                }
                return $$res;
            });
    }
    public matchelement205($$dpth: number, $$cr?: ErrorTracker): Nullable<element205> {
        return this.run<element205>($$dpth,
            () => {
                let $$res: Nullable<element205> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-border-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element205, };
                }
                return $$res;
            });
    }
    public matchelement206($$dpth: number, $$cr?: ErrorTracker): Nullable<element206> {
        return this.run<element206>($$dpth,
            () => {
                let $$res: Nullable<element206> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-border-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element206, };
                }
                return $$res;
            });
    }
    public matchelement207($$dpth: number, $$cr?: ErrorTracker): Nullable<element207> {
        return this.run<element207>($$dpth,
            () => {
                let $$res: Nullable<element207> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-border-style)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element207, };
                }
                return $$res;
            });
    }
    public matchelement208($$dpth: number, $$cr?: ErrorTracker): Nullable<element208> {
        return this.run<element208>($$dpth,
            () => {
                let $$res: Nullable<element208> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-focus-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element208, };
                }
                return $$res;
            });
    }
    public matchelement209($$dpth: number, $$cr?: ErrorTracker): Nullable<element209> {
        return this.run<element209>($$dpth,
            () => {
                let $$res: Nullable<element209> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-focus-border-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element209, };
                }
                return $$res;
            });
    }
    public matchelement210($$dpth: number, $$cr?: ErrorTracker): Nullable<element210> {
        return this.run<element210>($$dpth,
            () => {
                let $$res: Nullable<element210> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element210, };
                }
                return $$res;
            });
    }
    public matchelement211($$dpth: number, $$cr?: ErrorTracker): Nullable<element211> {
        return this.run<element211>($$dpth,
            () => {
                let $$res: Nullable<element211> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-padding-horizontal)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element211, };
                }
                return $$res;
            });
    }
    public matchelement212($$dpth: number, $$cr?: ErrorTracker): Nullable<element212> {
        return this.run<element212>($$dpth,
            () => {
                let $$res: Nullable<element212> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$textfield-padding-vertical)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element212, };
                }
                return $$res;
            });
    }
    public matchelement213($$dpth: number, $$cr?: ErrorTracker): Nullable<element213> {
        return this.run<element213>($$dpth,
            () => {
                let $$res: Nullable<element213> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$timeline-badge-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element213, };
                }
                return $$res;
            });
    }
    public matchelement214($$dpth: number, $$cr?: ErrorTracker): Nullable<element214> {
        return this.run<element214>($$dpth,
            () => {
                let $$res: Nullable<element214> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$timeline-border-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element214, };
                }
                return $$res;
            });
    }
    public matchelement215($$dpth: number, $$cr?: ErrorTracker): Nullable<element215> {
        return this.run<element215>($$dpth,
            () => {
                let $$res: Nullable<element215> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$timeline-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element215, };
                }
                return $$res;
            });
    }
    public matchelement216($$dpth: number, $$cr?: ErrorTracker): Nullable<element216> {
        return this.run<element216>($$dpth,
            () => {
                let $$res: Nullable<element216> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$timeline-item-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element216, };
                }
                return $$res;
            });
    }
    public matchelement217($$dpth: number, $$cr?: ErrorTracker): Nullable<element217> {
        return this.run<element217>($$dpth,
            () => {
                let $$res: Nullable<element217> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$timeline-light-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element217, };
                }
                return $$res;
            });
    }
    public matchelement218($$dpth: number, $$cr?: ErrorTracker): Nullable<element218> {
        return this.run<element218>($$dpth,
            () => {
                let $$res: Nullable<element218> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toggle-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element218, };
                }
                return $$res;
            });
    }
    public matchelement219($$dpth: number, $$cr?: ErrorTracker): Nullable<element219> {
        return this.run<element219>($$dpth,
            () => {
                let $$res: Nullable<element219> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toggle-width-factor)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element219, };
                }
                return $$res;
            });
    }
    public matchelement220($$dpth: number, $$cr?: ErrorTracker): Nullable<element220> {
        return this.run<element220>($$dpth,
            () => {
                let $$res: Nullable<element220> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-active-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element220, };
                }
                return $$res;
            });
    }
    public matchelement221($$dpth: number, $$cr?: ErrorTracker): Nullable<element221> {
        return this.run<element221>($$dpth,
            () => {
                let $$res: Nullable<element221> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element221, };
                }
                return $$res;
            });
    }
    public matchelement222($$dpth: number, $$cr?: ErrorTracker): Nullable<element222> {
        return this.run<element222>($$dpth,
            () => {
                let $$res: Nullable<element222> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element222, };
                }
                return $$res;
            });
    }
    public matchelement223($$dpth: number, $$cr?: ErrorTracker): Nullable<element223> {
        return this.run<element223>($$dpth,
            () => {
                let $$res: Nullable<element223> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-faded-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element223, };
                }
                return $$res;
            });
    }
    public matchelement224($$dpth: number, $$cr?: ErrorTracker): Nullable<element224> {
        return this.run<element224>($$dpth,
            () => {
                let $$res: Nullable<element224> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element224, };
                }
                return $$res;
            });
    }
    public matchelement225($$dpth: number, $$cr?: ErrorTracker): Nullable<element225> {
        return this.run<element225>($$dpth,
            () => {
                let $$res: Nullable<element225> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$toolbar-title-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element225, };
                }
                return $$res;
            });
    }
    public matchelement226($$dpth: number, $$cr?: ErrorTracker): Nullable<element226> {
        return this.run<element226>($$dpth,
            () => {
                let $$res: Nullable<element226> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tooltip-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element226, };
                }
                return $$res;
            });
    }
    public matchelement227($$dpth: number, $$cr?: ErrorTracker): Nullable<element227> {
        return this.run<element227>($$dpth,
            () => {
                let $$res: Nullable<element227> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tooltip-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element227, };
                }
                return $$res;
            });
    }
    public matchelement228($$dpth: number, $$cr?: ErrorTracker): Nullable<element228> {
        return this.run<element228>($$dpth,
            () => {
                let $$res: Nullable<element228> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tooltip-box-shadow)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element228, };
                }
                return $$res;
            });
    }
    public matchelement229($$dpth: number, $$cr?: ErrorTracker): Nullable<element229> {
        return this.run<element229>($$dpth,
            () => {
                let $$res: Nullable<element229> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tooltip-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element229, };
                }
                return $$res;
            });
    }
    public matchelement230($$dpth: number, $$cr?: ErrorTracker): Nullable<element230> {
        return this.run<element230>($$dpth,
            () => {
                let $$res: Nullable<element230> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tooltip-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element230, };
                }
                return $$res;
            });
    }
    public matchelement231($$dpth: number, $$cr?: ErrorTracker): Nullable<element231> {
        return this.run<element231>($$dpth,
            () => {
                let $$res: Nullable<element231> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tree-connector-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element231, };
                }
                return $$res;
            });
    }
    public matchelement232($$dpth: number, $$cr?: ErrorTracker): Nullable<element232> {
        return this.run<element232>($$dpth,
            () => {
                let $$res: Nullable<element232> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tree-highlight-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element232, };
                }
                return $$res;
            });
    }
    public matchelement233($$dpth: number, $$cr?: ErrorTracker): Nullable<element233> {
        return this.run<element233>($$dpth,
            () => {
                let $$res: Nullable<element233> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tree-highlight-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element233, };
                }
                return $$res;
            });
    }
    public matchelement234($$dpth: number, $$cr?: ErrorTracker): Nullable<element234> {
        return this.run<element234>($$dpth,
            () => {
                let $$res: Nullable<element234> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tree-label-border-radius)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element234, };
                }
                return $$res;
            });
    }
    public matchelement235($$dpth: number, $$cr?: ErrorTracker): Nullable<element235> {
        return this.run<element235>($$dpth,
            () => {
                let $$res: Nullable<element235> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$tree-label-padding)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element235, };
                }
                return $$res;
            });
    }
    public matchelement236($$dpth: number, $$cr?: ErrorTracker): Nullable<element236> {
        return this.run<element236>($$dpth,
            () => {
                let $$res: Nullable<element236> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$typography-font-family)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element236, };
                }
                return $$res;
            });
    }
    public matchelement237($$dpth: number, $$cr?: ErrorTracker): Nullable<element237> {
        return this.run<element237>($$dpth,
            () => {
                let $$res: Nullable<element237> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-failed-background)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element237, };
                }
                return $$res;
            });
    }
    public matchelement238($$dpth: number, $$cr?: ErrorTracker): Nullable<element238> {
        return this.run<element238>($$dpth,
            () => {
                let $$res: Nullable<element238> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-failed-color)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element238, };
                }
                return $$res;
            });
    }
    public matchelement239($$dpth: number, $$cr?: ErrorTracker): Nullable<element239> {
        return this.run<element239>($$dpth,
            () => {
                let $$res: Nullable<element239> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-file-max-width)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element239, };
                }
                return $$res;
            });
    }
    public matchelement240($$dpth: number, $$cr?: ErrorTracker): Nullable<element240> {
        return this.run<element240>($$dpth,
            () => {
                let $$res: Nullable<element240> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-font-size)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element240, };
                }
                return $$res;
            });
    }
    public matchelement241($$dpth: number, $$cr?: ErrorTracker): Nullable<element241> {
        return this.run<element241>($$dpth,
            () => {
                let $$res: Nullable<element241> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-img-max-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element241, };
                }
                return $$res;
            });
    }
    public matchelement242($$dpth: number, $$cr?: ErrorTracker): Nullable<element242> {
        return this.run<element242>($$dpth,
            () => {
                let $$res: Nullable<element242> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$uploader-progressbar-height)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element242, };
                }
                return $$res;
            });
    }
    public matchelement243($$dpth: number, $$cr?: ErrorTracker): Nullable<element243> {
        return this.run<element243>($$dpth,
            () => {
                let $$res: Nullable<element243> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$warning)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element243, };
                }
                return $$res;
            });
    }
    public matchelement244($$dpth: number, $$cr?: ErrorTracker): Nullable<element244> {
        return this.run<element244>($$dpth,
            () => {
                let $$res: Nullable<element244> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$white)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element244, };
                }
                return $$res;
            });
    }
    public matchelement245($$dpth: number, $$cr?: ErrorTracker): Nullable<element245> {
        return this.run<element245>($$dpth,
            () => {
                let $$res: Nullable<element245> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-absolute)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element245, };
                }
                return $$res;
            });
    }
    public matchelement246($$dpth: number, $$cr?: ErrorTracker): Nullable<element246> {
        return this.run<element246>($$dpth,
            () => {
                let $$res: Nullable<element246> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-body-dimmed)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element246, };
                }
                return $$res;
            });
    }
    public matchelement247($$dpth: number, $$cr?: ErrorTracker): Nullable<element247> {
        return this.run<element247>($$dpth,
            () => {
                let $$res: Nullable<element247> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-drawer)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element247, };
                }
                return $$res;
            });
    }
    public matchelement248($$dpth: number, $$cr?: ErrorTracker): Nullable<element248> {
        return this.run<element248>($$dpth,
            () => {
                let $$res: Nullable<element248> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-fab)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element248, };
                }
                return $$res;
            });
    }
    public matchelement249($$dpth: number, $$cr?: ErrorTracker): Nullable<element249> {
        return this.run<element249>($$dpth,
            () => {
                let $$res: Nullable<element249> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-marginals)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element249, };
                }
                return $$res;
            });
    }
    public matchelement250($$dpth: number, $$cr?: ErrorTracker): Nullable<element250> {
        return this.run<element250>($$dpth,
            () => {
                let $$res: Nullable<element250> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-modal)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element250, };
                }
                return $$res;
            });
    }
    public matchelement251($$dpth: number, $$cr?: ErrorTracker): Nullable<element251> {
        return this.run<element251>($$dpth,
            () => {
                let $$res: Nullable<element251> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-popover)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element251, };
                }
                return $$res;
            });
    }
    public matchelement252($$dpth: number, $$cr?: ErrorTracker): Nullable<element252> {
        return this.run<element252>($$dpth,
            () => {
                let $$res: Nullable<element252> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-toast)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element252, };
                }
                return $$res;
            });
    }
    public matchelement253($$dpth: number, $$cr?: ErrorTracker): Nullable<element253> {
        return this.run<element253>($$dpth,
            () => {
                let $$res: Nullable<element253> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\$z-tooltip)`, $$dpth + 1, $$cr) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.element253, };
                }
                return $$res;
            });
    }
    public test(): boolean {
        const mrk = this.mark();
        const res = this.matchelement(0);
        const ans = res !== null;
        this.reset(mrk);
        return ans;
    }
    public parse(): ParseResult {
        const mrk = this.mark();
        const res = this.matchelement(0);
        if (res)
            return {ast: res, errs: []};
        this.reset(mrk);
        const rec = new ErrorTracker();
        this.clearMemos();
        this.matchelement(0, rec);
        const err = rec.getErr()
        return {ast: res, errs: err !== null ? [err] : []}
    }
    public mark(): PosInfo {
        return this.pos;
    }
    private loop<T>(func: $$RuleType<T>, star: boolean = false): Nullable<T[]> {
        const mrk = this.mark();
        const res: T[] = [];
        for (;;) {
            const t = func();
            if (t === null) {
                break;
            }
            res.push(t);
        }
        if (star || res.length > 0) {
            return res;
        }
        this.reset(mrk);
        return null;
    }
    private run<T>($$dpth: number, fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn()
        if (res !== null)
            return res;
        this.reset(mrk);
        return null;
    }
    private choice<T>(fns: Array<$$RuleType<T>>): Nullable<T> {
        for (const f of fns) {
            const res = f();
            if (res !== null) {
                return res;
            }
        }
        return null;
    }
    private regexAccept(match: string, dpth: number, cr?: ErrorTracker): Nullable<string> {
        return this.run<string>(dpth,
            () => {
                const reg = new RegExp(match, "y");
                const mrk = this.mark();
                reg.lastIndex = mrk.overallPos;
                const res = this.tryConsume(reg);
                if(cr) {
                    cr.record(mrk, res, {
                        kind: "RegexMatch",
                        // We substring from 3 to len - 1 to strip off the
                        // non-capture group syntax added as a WebKit workaround
                        literal: match.substring(3, match.length - 1),
                        negated: this.negating,
                    });
                }
                return res;
            });
    }
    private tryConsume(reg: RegExp): Nullable<string> {
        const res = reg.exec(this.input);
        if (res) {
            let lineJmp = 0;
            let lind = -1;
            for (let i = 0; i < res[0].length; ++i) {
                if (res[0][i] === "\n") {
                    ++lineJmp;
                    lind = i;
                }
            }
            this.pos = {
                overallPos: reg.lastIndex,
                line: this.pos.line + lineJmp,
                offset: lind === -1 ? this.pos.offset + res[0].length : (res[0].length - lind - 1)
            };
            return res[0];
        }
        return null;
    }
    private noConsume<T>(fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn();
        this.reset(mrk);
        return res;
    }
    private negate<T>(fn: $$RuleType<T>): Nullable<boolean> {
        const mrk = this.mark();
        const oneg = this.negating;
        this.negating = !oneg;
        const res = fn();
        this.negating = oneg;
        this.reset(mrk);
        return res === null ? true : null;
    }
    private memoise<K>(rule: $$RuleType<K>, memo: Map<number, [Nullable<K>, PosInfo]>): Nullable<K> {
        const $scope$pos = this.mark();
        const $scope$memoRes = memo.get($scope$pos.overallPos);
        if(this.memoSafe && $scope$memoRes !== undefined) {
        this.reset($scope$memoRes[1]);
        return $scope$memoRes[0];
        }
        const $scope$result = rule();
        if(this.memoSafe)
        memo.set($scope$pos.overallPos, [$scope$result, this.mark()]);
        return $scope$result;
    }
    private match$EOF(et?: ErrorTracker): Nullable<{kind: ASTKinds.$EOF}> {
        const res: {kind: ASTKinds.$EOF} | null = this.finished() ? { kind: ASTKinds.$EOF } : null;
        if(et)
            et.record(this.mark(), res, { kind: "EOF", negated: this.negating });
        return res;
    }
}
export function parse(s: string): ParseResult {
    const p = new Parser(s);
    return p.parse();
}
export interface ParseResult {
    ast: Nullable<element>;
    errs: SyntaxErr[];
}
export interface PosInfo {
    readonly overallPos: number;
    readonly line: number;
    readonly offset: number;
}
export interface RegexMatch {
    readonly kind: "RegexMatch";
    readonly negated: boolean;
    readonly literal: string;
}
export type EOFMatch = { kind: "EOF"; negated: boolean };
export type MatchAttempt = RegexMatch | EOFMatch;
export class SyntaxErr {
    public pos: PosInfo;
    public expmatches: MatchAttempt[];
    constructor(pos: PosInfo, expmatches: MatchAttempt[]) {
        this.pos = pos;
        this.expmatches = [...expmatches];
    }
    public toString(): string {
        return `Syntax Error at line ${this.pos.line}:${this.pos.offset}. Expected one of ${this.expmatches.map(x => x.kind === "EOF" ? " EOF" : ` ${x.negated ? 'not ': ''}'${x.literal}'`)}`;
    }
}
class ErrorTracker {
    private mxpos: PosInfo = {overallPos: -1, line: -1, offset: -1};
    private regexset: Set<string> = new Set();
    private pmatches: MatchAttempt[] = [];
    public record(pos: PosInfo, result: any, att: MatchAttempt) {
        if ((result === null) === att.negated)
            return;
        if (pos.overallPos > this.mxpos.overallPos) {
            this.mxpos = pos;
            this.pmatches = [];
            this.regexset.clear()
        }
        if (this.mxpos.overallPos === pos.overallPos) {
            if(att.kind === "RegexMatch") {
                if(!this.regexset.has(att.literal))
                    this.pmatches.push(att);
                this.regexset.add(att.literal);
            } else {
                this.pmatches.push(att);
            }
        }
    }
    public getErr(): SyntaxErr | null {
        if (this.mxpos.overallPos !== -1)
            return new SyntaxErr(this.mxpos, this.pmatches);
        return null;
    }
}